/*! For license information please see liquicode.node-min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r,n=t();for(r in n)("object"==typeof exports?exports:e)[r]=n[r]}}(global,(()=>(()=>{"use strict";var e={526:(e,t,r)=>{let n={id:"000",name:"Types",type:"namespace",summary:"Data Type Handling"};e.exports=function(e){return{_Schema:n,HasValue:r(2438)(e).HasValue,Coerce:r(3558)(e).Coerce,Formats:r(1672)(e).Formats,GetFormat:r(4507)(e).GetFormat,IsFormat:r(6142)(e).IsFormat}}},2438:e=>{let t={id:"001",member_of:"Types",name:"HasValue",type:"function",returns:"boolean",returns_description:"True if Value actually contains a value.",summary:"Determine if a variable contains a value or or not.",description:'\nTests the provided Value parameter and returns false if it does not represent a value.\nMore specifically, if Value is undefined or null, then false is returned.\nif Value is a zero length string `""` or an empty object `{}`, false is also returned.\nIn all other cases, this function returns true.\n',Parameters:{Value:{name:"Value",type:"*",required:!0,description:"The value to test."}},todo:[]};e.exports=function(e){return{_Schema:t,HasValue:function(e){return!(null==e||"string"==typeof e&&0===e.length||"object"==typeof e&&0===Object.keys(e).length)}}}},3558:e=>{let t={id:"010",member_of:"Types",name:"Coerce",type:"function",returns:"object",returns_description:"A `Coercion` object.",summary:"Returns a `Coercion` object which is used to coerce values to different types.",description:"\nThe returned `Coercion` object has a single member `Coercion.value` and a number of coercion functions:\n\n- `ToBoolean( Default = false )` :\n\tReturns the boolean value of `Coercion.value`.\n\tAnything can be coerced to a boolean.\n\tIf value is a string, then 'false' and '0' will return false while 'true' will return true.\n\n- `ToNumber( Default = 0 )` :\n\tReturns the numeric value of `Coercion.value`.\n\tBooleans, other numbers, and numeric strings can be coerced to a number.\n\n- `ToString( Default = '' )` :\n\tReturns the string value of `Coercion.value`.\n\tAnything can be coerced to a string.\n\tIf value is an object, then it is JSON stringified and returned.\n\n- `ToObject( Default = null )` :\n\tReturns the object value of `Coercion.value`.\n\tOnly JSON strings and other objects can be coerced to an object.\n\tIf value is a JSON string, then it is JSON parsed and returned.\n\n`Coercion.value` is set to the Value parameter.\n\n**Usage**\n\nThere are two ways to use the `Coercion` object.\n\nOne way is to immediately call one of the coercion functions after obtaining the `Coercion` object:\n~~~javascript\nlet number_42 = Liquicode.Types.Coerce( '42' ).ToNumber();\n~~~\n\nAnother way is to reuse the `Coercion` object and alter the `Coercion.value` property yourself:\n~~~javascript\nlet coercion = Liquicode.Types.Coerce();\ncoercion.value = '42';\nlet number_42 = coercion.ToNumber();\n~~~\n\n**Examples**\n\n~~~javascript\n// Coercing to boolean\nSchema.Coerce( null ).ToBoolean()           // = false\nSchema.Coerce( 0 ).ToBoolean()              // = false\nSchema.Coerce( 'true' ).ToBoolean()         // = true\n\n// Coercing to number\nSchema.Coerce( null ).ToNumber()            // = 0\nSchema.Coerce( '3.14' ).ToNumber()          // = 3.14\nSchema.Coerce( 'foo' ).ToNumber()           // = 0\n\n// Coercing to string\nSchema.Coerce( null ).ToString()            // = ''\nSchema.Coerce( '3.14' ).ToString()          // = '3.14'\nSchema.Coerce( { foo: 'bar' } ).ToString()  // = '{\"foo\":\"bar\"}'\n\n// Coercing to object\nSchema.Coerce( null ).ToObject()            // = null\nSchema.Coerce( 3.14 ).ToObject()            // = null\nSchema.Coerce( '{\"foo\":\"bar\"}' ).ToObject() // = { foo: 'bar' }\n\n// Coercing with a Default\nSchema.Coerce( 'Hello' ).ToNumber( -1 )     // = -1\nSchema.Coerce( true ).ToObject( {} )        // = {}\nSchema.Coerce( 1024 ).ToObject( {} )        // = {}\nSchema.Coerce( null ).ToObject( { a: 1 } )  // = { a: 1 }\nSchema.Coerce( null ).ToObject( [ 1, 2 ] )  // = [ 1, 2 ]\n~~~\n",Parameters:{Value:{name:"Value",type:"*",required:!1,description:"The value to coerce. This value is set to `Coercion.value`."},Loud:{name:"Loud",type:"boolean",required:!1,default:!1,description:"Throws errors when set to `true`."}},todo:[]};e.exports=function(e){function r(e,t,r){if(e)throw new Error(r);return t}return{_Schema:t,Coerce:function(e,t=!1){return{value:e,loud:t,ToBoolean:function(e=!1){if(void 0===this.value)return e;if(null===this.value)return e;if("string"==typeof this.value){if("false"===this.value)return!1;if("true"===this.value)return!0;if("0"===this.value)return!1}return Boolean(this.value)},ToNumber:function(e=0){if(void 0===this.value)return e;if(null===this.value)return e;var t=Number(this.value);return isNaN(t)?r(this.loud,e,"Unable to coerce value to a number."):t},ToString:function(e=""){return void 0===this.value||null===this.value?e:"object"==typeof this.value?JSON.stringify(this.value):void 0===this.value.toString?r(this.loud,e,"Unable to coerce value to a string."):this.value.toString()},ToObject:function(e=null){if(void 0===this.value)return e;if(null===this.value)return e;switch(typeof this.value){case"boolean":return r(this.loud,e,"Unable to coerce from boolean to object.");case"number":return r(this.loud,e,"Unable to coerce from number to object.");case"string":let t=this.value.trim();if(t.startsWith("{")||t.startsWith("["))try{return t=JSON.parse(t)}catch(t){return r(this.loud,e,"Unable to coerce from non-json string to object.")}case"object":return this.value;case"function":return r(this.loud,e,"Unable to coerce from function to object.");case"symbol":return r(this.loud,e,"Unable to coerce from symbol to object.");default:return r(this.loud,e,`Unknown type encountered [${typeof this.value}].`)}},ToType:function(e,t){switch(e){case"boolean":return this.ToBoolean(t);case"number":return this.ToNumber(t);case"string":return this.ToString(t);case"object":return this.ToObject(t);default:throw new Error(`Invalid or unknown type name [${e}].`)}}}}}}},1672:e=>{let t={id:"020",member_of:"Types",name:"Formats",source_type:"function",returns:"object",returns_description:"An array of `SchemaFormat` objects.",summary:"Returns an array of `SchemaFormat` objects used to convert values between different formats.",description:"\nReturns the library's internal array of format objects, `Types.Formats`.\n\nEach format has a `type` and `format` string, and an `IsFormat( Value )` function.\nThis list of formats is used by the `Types.GetFormat()` and `Types.IsFormat()` functions.\n\nApplications can ammend this array in order to customize type processing or add new formats.\nThe structure of each format in the array is:\n~~~javascript\n{\n\ttype: '',    // The Javascript data type. e.g. 'boolean', 'number', 'string', 'object'\n\tformat: '',  // A type specific format. e.g. 'integer', 'date'. \n\tIsFormat: function ( Value )\n\t{\n\t\treturn true;  // Return true, if Value is of this format.\n\t}\n}\n~~~\n\nFor example, here is the format object for `\"string:string\"`:\n~~~javascript\n{\n\ttype: 'string',\n\tformat: 'string',\n\tIsFormat: function ( Value )\n\t{\n\t\tif ( typeof Value !== 'string' ) { return false; }\n\t\treturn true;\n\t},\n},\n~~~\n\nYou have the ability to directly modify the `Types.Formats` array.\n\nFor example, suppose you want to define two new formats to detect objects of 'object:person' and 'object:employee'.\n~~~javascript\nPerson = {\n\tfirst_name: '',\n\tlast_name: '',\n}\nEmployee = {\n\tfirst_name: '',\n\tlast_name: '',\n\ttitle: '',\n}\n~~~\n\nThe format objects might look something like this:\n~~~javascript\nobject_person = {\n\ttype: 'object',\n\tformat: 'person',\n\tIsFormat: function( Value )\n\t{\n\t\tif ( typeof Value !== 'object' ) { return false; }\n\t\tif ( !Value ) { return false; }\n\t\tif ( !Value.first_name ) { return false; }\n\t\tif ( !Value.last_name ) { return false; }\n\t\treturn true;\n\t},\n},\nobject_employee = {\n\ttype: 'object',\n\tformat: 'employee',\n\tIsFormat: function( Value )\n\t{\n\t\tif ( typeof Value !== 'object' ) { return false; }\n\t\tif ( !Value ) { return false; }\n\t\tif ( !Value.first_name ) { return false; }\n\t\tif ( !Value.last_name ) { return false; }\n\t\tif ( !Value.title ) { return false; }\n\t\treturn true;\n\t},\n},\n~~~\n\nAnd tou can add them to the `Types.Formats` array:\n~~~javascript\nlet formats = Liquicode.Types.Formats();\nformats.push( object_person );\nformats.push( object_employee );\n~~~\n\nThe `Types.GetFormat()` function reads the formats array in reverse order when matching a value to a format.\nThis is done so that more complex types will not get \"short-circuited\" by less complex types.\nThe more complex format in this case is \"object:employee\" and should appear after \"object:person\" in the array.\n\n",Parameters:{},todo:[]};e.exports=function(e){let r=[{type:"boolean",format:"boolean",IsFormat:function(e){return"boolean"==typeof e}},{type:"number",format:"number",IsFormat:function(e){return"number"==typeof e}},{type:"number",format:"integer",IsFormat:function(e){return"number"==typeof e&&e===parseInt(e.toString())}},{type:"string",format:"string",IsFormat:function(e){return"string"==typeof e}},{type:"string",format:"json",IsFormat:function(e){return!("string"!=typeof e||!e||!(e=e.trimStart()).startsWith("{")&&!e.startsWith("["))}},{type:"string",format:"datetime",IsFormat:function(e){return!("string"!=typeof e||!e||24!==e.length||isNaN(Number(e.substring(0,4)))||"-"!==e[4]||isNaN(Number(e.substring(5,7)))||"-"!==e[7]||isNaN(Number(e.substring(8,10)))||"T"!==e[10]||isNaN(Number(e.substring(11,13)))||":"!==e[13]||isNaN(Number(e.substring(14,16)))||":"!==e[16]||isNaN(Number(e.substring(17,19)))||"."!==e[19]||isNaN(Number(e.substring(20,23)))||"Z"!==e[23])}},{type:"string",format:"date",IsFormat:function(e){return!("string"!=typeof e||!e||10!==e.length||isNaN(Number(e.substring(0,4)))||"-"!==e[4]||isNaN(Number(e.substring(5,7)))||"-"!==e[7]||isNaN(Number(e.substring(8,10))))}},{type:"string",format:"time",IsFormat:function(e){return!("string"!=typeof e||!e||8!==e.length||isNaN(Number(e.substring(0,2)))||":"!==e[2]||isNaN(Number(e.substring(3,5)))||":"!==e[5]||isNaN(Number(e.substring(6,8))))}},{type:"object",format:"object",IsFormat:function(e){return"object"==typeof e&&!!e}},{type:"object",format:"datetime",IsFormat:function(e){return"object"==typeof e&&!!e&&!!e.getTime&&!isNaN(e.getTime())}},{type:"object",format:"array",IsFormat:function(e){return"object"==typeof e&&!!e&&!!Array.isArray(e)}},{type:"object",format:"boolean-array",IsFormat:function(e){if("object"!=typeof e)return!1;if(!e)return!1;if(!Array.isArray(e))return!1;if(!e.length)return!1;for(let t=0;t<e.length;t++)if("boolean"!=typeof e[t])return!1;return!0}},{type:"object",format:"number-array",IsFormat:function(e){if("object"!=typeof e)return!1;if(!e)return!1;if(!Array.isArray(e))return!1;if(!e.length)return!1;for(let t=0;t<e.length;t++)if("number"!=typeof e[t])return!1;return!0}},{type:"object",format:"string-array",IsFormat:function(e){if("object"!=typeof e)return!1;if(!e)return!1;if(!Array.isArray(e))return!1;if(!e.length)return!1;for(let t=0;t<e.length;t++)if("string"!=typeof e[t])return!1;return!0}},{type:"object",format:"object-array",IsFormat:function(e){if("object"!=typeof e)return!1;if(!e)return!1;if(!Array.isArray(e))return!1;if(!e.length)return!1;for(let t=0;t<e.length;t++)if("object"!=typeof e[t])return!1;return!0}},{type:"object",format:"array-array",target_type:"object",IsFormat:function(e){if("object"!=typeof e)return!1;if(!e)return!1;if(!Array.isArray(e))return!1;if(!e.length)return!1;for(let t=0;t<e.length;t++){if("object"!=typeof e[t])return!1;if(!Array.isArray(e[t]))return!1}return!0}}];return{_Schema:t,Formats:function(){return r}}}},4507:e=>{let t={id:"021",member_of:"Types",name:"GetFormat",type:"function",returns:"string",returns_description:"An extended type description.",summary:"Determine the type and format of a value.",description:"\nIterates through `Types.Formats` in reverse order and calls each `Format.IsFormat()` function.\nWhen one of the formats returns `true`, then it's type and format are returned separated by `:`.\n\n**Examples**\n\n~~~javascript\nLiquicode.Types.GetFormat( '42' )         // = 'number:integer'\nLiquicode.Types.GetFormat( 'Hello' )      // = 'string:string'\nLiquicode.Types.GetFormat( new Date() )   // = 'object:datetime'\nLiquicode.Types.GetFormat( [ 1, 2, 3 ] )  // = 'object:number-array'\n~~~\n",Parameters:{Value:{name:"Value",type:"*",required:!0,description:"The value to get the format for."}},todo:[]};e.exports=function(e){return{_Schema:t,GetFormat:function(t){var r=e.Types.Formats();for(let e=r.length-1;0<=e;e--){let n=r[e];if(n.IsFormat(t))return n.type+":"+n.format}return null}}}},6142:e=>{let t={id:"022",member_of:"Types",name:"IsFormat",type:"function",returns:"boolean",returns_description:"True if the value matches the format.",summary:"Determine if a value is of a particular format.",description:"\nLooks up the specified format in `Types.Formats` and calls the `Format.IsFormat()` function.\n\nThe `Format` parameter must specify both type and format to be tested for.\n\n**Examples**\n\n~~~javascript\nLiquicode.Types.IsFormat( 'Hello', 'string:string' )            // = true\nLiquicode.Types.IsFormat( 'Hello', 'string:json' )              // = false\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:array' )         // = true\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:number-array' )  // = true\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:string-array' )  // = false\n~~~\n",Parameters:{Value:{name:"Value",type:"*",required:!0,description:"The value to test."},Format:{name:"Format",type:"string",required:!0,description:'The type and format to test for as: `"type:format"`.',examples:["string:string","string:json","object:datetime"]}},todo:[]};e.exports=function(e){return{_Schema:t,IsFormat:function(t,r){var n=e.Types.Formats();for(let e=0;e<n.length;e++){let o=n[e];if(r===o.type+":"+o.format)return o.IsFormat(t)}throw new Error(`Unknown type and format [${r}]. Should be of the form [type:format].`)}}}},867:(e,t,r)=>{let n={id:"100",name:"Object",type:"namespace",summary:"Functions for manipulating Javascript objects."};e.exports=function(e){return{_Schema:n,Clone:r(7613)(e).Clone,Merge:r(7325)(e).Merge,FromJson:r(9244)(e).FromJson,ToJsonOptions:r(3487)(e).ToJsonOptions,ToJson:r(9763)(e).ToJson,FromIni:r(8301)(e).FromIni,ToIni:r(1212)(e).ToIni}}},7613:e=>{let t={id:"101",member_of:"Object",name:"Clone",type:"function",returns:"string",description:["Returns a clone of the given object.","This is equivalent to doing A = JSON.parse( JSON.stringify( B ) )."],Parameters:{From:{name:"From",type:"object",default:{}}}};e.exports=function(e){return{_Schema:t,Clone:function(e){return JSON.parse(JSON.stringify(e))}}}},7325:e=>{let t={id:"103",member_of:"Object",name:"Merge",type:"function",returns:"object",description:"\nMerges the content of two objects and returns the composite result.\n\nSimilar to Clone, this function will remove any non-data fields (i.e. functions and symbols) from the objects.\n",Parameters:{Original:{name:"Original",type:"object",required:!0},Updates:{name:"Updates",type:"object",required:!1}}};e.exports=function(e){return{_Schema:t,Merge:function(t,r){return t=e.Types.Coerce(t,!0).ToObject({}),r=e.Types.Coerce(r,!0).ToObject({}),function e(t,r){Object.keys(r).forEach((n=>{var o=r[n];void 0!==t[n]&&"object"==typeof o?null===t[n]&&null===o||(null!==t[n]&&null===o?t[n]=null:null===t[n]&&null!==o?(t[n]={},e(t[n],o)):null!==t[n]&&null!==o&&e(t[n],o)):t[n]=JSON.parse(JSON.stringify(o))}))}(t=JSON.parse(JSON.stringify(t)),r),t}}}},9244:e=>{let t={id:"120",member_of:"Object",name:"FromJson",type:"function",returns:"object",description:"\nParse a Json string and return an object value.\nThis is identical Javascript's \"JSON.parse()\" function.\n\nThere are some significant differences from Javascript's version.\nThe parser is a bit more relaxed and allows:\n- Identifiers are not required to have quotes.\n- A comma can appear after the last element of an array or object.\n- String literals can use either single or double quotes.\n- Parsing automatically stops when the closing brace or bracket is found in the json string.\n\n",Parameters:{JsonString:{name:"JsonString",type:"string"}}};e.exports=function(e){function r(e){e.length&&","===e[0].token&&e.shift()}return{_Schema:t,FromJson:function(e){return function e(t){for(;t.length;){if("["===t[0].token){t.shift();let n=[];for(;"]"!==t[0].token;)n.push(e(t));return t.shift(),r(t),n}if("{"===t[0].token){t.shift();let n={};for(;"}"!==t[0].token;){let r=t.shift(),o=t.shift();if("literal"!==r.type&&"string"!==r.type)throw new Error(`At position [${r.at}]: Expected literal, found ${r.type} '${r.token}' instead.`,r);if(":"!==o.token)throw new Error(`At position [${o.at}]: Expected ':', found '${o.token}' instead.`,o);n[r.token]=e(t)}return t.shift(),r(t),n}{let e=t[0].token;return"literal"===t[0].type&&("null"===e.toLowerCase()?e=null:"true"===e.toLowerCase()?e=!0:"false"===e.toLowerCase()&&(e=!1),!isNaN(parseFloat(e))&&isFinite(e)&&(e=parseFloat(e))),t.shift(),r(t),e}}}(function(e){let t=[],r=0;for(;r<e.length;){var n=e.charAt(r);if(" \t\n".includes(n))r++;else if("[]{}:,".includes(n))t.push({token:n,type:"delimiter",at:r}),r++;else if("'\"".includes(n)){var o=r;r++;let a="";for(;r<e.length;){let t=e.charAt(r);if(t===n){r++;break}"\\"===t&&(r++,t=r<e.length?e.charAt(r):""),a+=t,r++}t.push({token:a,type:"string",at:o})}else{o=r,r++;let i=n;for(;r<e.length;){var a=e.charAt(r);if(" \t\n".includes(a)||"[]{}:,".includes(a)||"'\"".includes(a))break;i+=a,r++}t.push({token:i,type:"literal",at:o})}}return t}(e="string"!=typeof(e=e||"")?e.toString():e))}}}},3487:e=>{let t={id:"121",member_of:"Object",name:"ToJsonOptions",type:"function",returns:"object",description:"\n",Parameters:{PresetName:{name:"PresetName",type:"string"}}};e.exports=function(e){return{_Schema:t,ToJsonOptions:function(t){let r={identifier_quote:'"',literal_quote:'"',always_quote_identifiers:!0,eol_char:"",tab_char:"",space_char:"",liberal_commas:!1,align_values:!1};if((t=e.Types.Coerce(t).ToString())&&"default"!==t)if("pretty"===t)r.identifier_quote='"',r.literal_quote='"',r.always_quote_identifiers=!0,r.eol_char="\n",r.tab_char="    ",r.space_char=" ";else{if("pretty-2"!==t)throw new Error(`The parameter [PresetName] has an invalid value of [${t}]. Must be one of: 'default', 'pretty', or 'pretty-2'.`);r.identifier_quote="'",r.literal_quote='"',r.always_quote_identifiers=!1,r.eol_char="\n",r.tab_char="    ",r.space_char=" ",r.liberal_commas=!0,r.align_values=!0}return r}}}},9763:e=>{let t={id:"122",member_of:"Object",name:"ToJson",type:"function",returns:"object",description:"\n",Parameters:{Value:{name:"Value",type:"*",description:"The value to convert to a json string."},JsonOptions:{name:"JsonOptions",type:"object|string",description:'Can be an options object or the name of an options preset ("default", "pretty", or "pretty-2")'}}};e.exports=function(e){return{_Schema:t,ToJson:function(t,r){let n=e.Object.ToJsonOptions();return"string"==typeof r?n=e.Object.ToJsonOptions(r):"object"==typeof r&&Object.keys(r).length&&(n=e.Object.Merge(n,r)),function e(t,r,n,o=null){let a="";if(void 0!==t)if("boolean"==typeof t)a+=t.toString();else if("number"==typeof t)a+=t.toString();else if("bigint"==typeof t)a+=t.toString();else if("string"==typeof t){let e=t.toString();n.literal_quote&&(e=e.replace(n.literal_quote,"\\"+n.literal_quote)),a+=""+n.literal_quote+e+n.literal_quote}else if("symbol"!=typeof t&&"function"!=typeof t&&"object"==typeof t)if(null===t)a+="null";else if(Array.isArray(t)){a=(a=(a=(a+=n.eol_char)+n.tab_char.repeat(r))+"["+n.space_char)+n.eol_char;for(let o=0;o<t.length;o++)a=(a+=n.tab_char.repeat(r+1))+e(t[o],r+1,n,"array-element"),(o<t.length-1||n.liberal_commas)&&(a+=","+n.space_char),a+=n.eol_char;a+=n.tab_char.repeat(r),n.eol_char||(a+=n.space_char),a+="]"}else{"field-value"===o&&(a=(a+=n.eol_char)+n.tab_char.repeat(r)),a=(a+="{"+n.space_char)+n.eol_char;let i=Object.keys(t),s=0;i.map((e=>{e.length>s&&(s=e.length)}));for(let o=0;o<i.length;o++){let l=i[o];a=(a+=n.tab_char.repeat(r+1))+""+n.identifier_quote+l+n.identifier_quote+":",n.align_values&&(a+=" ".repeat(s-l.length)),a=(a+=n.space_char)+e(t[l],r+1,n,"field-value"),(o<i.length-1||n.liberal_commas)&&(a+=","+n.space_char),a+=n.eol_char}a+=n.tab_char.repeat(r),n.eol_char||(a+=n.space_char),a+="}"}return a}(t,0,n)}}}},8301:e=>{let t={id:"125",member_of:"Object",name:"FromIni",type:"function",returns:"object",description:"\nParse an Ini string and return an object value.\n\n",Parameters:{IniString:{name:"IniString",type:"string"}}};e.exports=function(e){return{_Schema:t,FromIni:function(t){let r={};var n=(t=e.Types.Coerce(t).ToString()).split("\n");let o="";for(let e=0;e<n.length;e++){let t=n[e];if(t)if((t=t.trim()).startsWith("[")){let e=t.indexOf("]");e<0&&(e=t.length),o=(o=t.substring(1,e)).trim(),r[o]={}}else if(o){var a=t.indexOf("=");if(!(a<0)){let e=t.substring(0,a),n=(e=e.trim(),t.substring(a+1));n=n.trim(),r[o][e]=n}}}return r}}}},1212:e=>{let t={id:"126",member_of:"Object",name:"ToIni",type:"function",returns:"object",description:"\nParse an Ini string and return an object value.\n\n",Parameters:{Value:{name:"Value",type:"object"}}};e.exports=function(e){return{_Schema:t,ToIni:function(t){t=e.Types.Coerce(t).ToObject();let r="";var n=Object.keys(t);for(let e=0;e<n.length;e++){var o=n[e],a=t[o];if("object"==typeof a&&!Array.isArray(a)){r+=`[${o}]\n`;var i=Object.keys(a);for(let e=0;e<i.length;e++){var s=i[e],l=a[s];"symbol"!=typeof l&&"function"!=typeof l&&"object"!=typeof l&&(r+=s+`=${l}\n`)}}}return r}}}},1618:(e,t,r)=>{let n={id:"200",name:"Text",type:"namespace",summary:"Functions for text parsing and manipulation."};e.exports=function(e){return{_Schema:n,Compare:r(2292)(e).Compare,Matches:r(9074)(e).Matches,ReplaceCharacters:r(5274)(e).ReplaceCharacters,ReplaceText:r(5168)(e).ReplaceText,FindBetween:r(8499)(e).FindBetween,ReplaceBetween:r(1572)(e).ReplaceBetween,FirstWord:r(6219)(e).FirstWord,AfterFirstWord:r(7831)(e).AfterFirstWord,LastWord:r(955)(e).LastWord,BeforeLastWord:r(5863)(e).BeforeLastWord}}},2292:e=>{let t={id:"201",member_of:"Text",name:"Compare",type:"function",returns:"string",description:["Compares two strings.","Returns a `-1` if `StringA` is less than `StringB`.","Returns a `1` if `StringA` is greater than than `StringB`.","Returns a `0` if `StringA` and `StringB` are the same."],Parameters:{StringA:{name:"StringA",type:"string",default:""},StringB:{name:"StringB",type:"string",default:""},CaseSensitive:{name:"CaseSensitive",type:"boolean",default:!0}}};e.exports=function(e){return{_Schema:t,Compare:function(r,n,o){r=e.Types.Coerce(r,t.Parameters.StringA,{coerce_values:!0,throw_errors:!0}),n=e.Types.Coerce(n,t.Parameters.StringB,{coerce_values:!0,throw_errors:!0}),o=e.Types.Coerce(o,t.Parameters.CaseSensitive,{coerce_values:!0,throw_errors:!0});try{return"string"!=typeof r?-1:"string"!=typeof n?1:(o||(r=r.toLowerCase(),n=n.toLowerCase()),r.localeCompare(n))}catch(r){return console.error(r.message,r),null}}}}},9074:e=>{let t={id:"203",member_of:"Text",name:"Matches",type:"function",returns:"string",description:["Matches the text against a wildcard-lik pattern.","Returns true If the match succeeds, otherwise false."],Parameters:{Text:{name:"Text",type:"string",required:!0,default:""},Pattern:{name:"Pattern",type:"string",required:!0,default:""}}};e.exports=function(e){return{_Schema:t,Matches:function(t,r){t=e.Types.Coerce(t).ToString();let n=(r=e.Types.Coerce(r).ToString()).replace(/[.+^${}()|[\]\\]/g,"\\$&");return new RegExp(`^${n.replace(/\*/g,".*").replace(/\?/g,".")}$`,"i").test(t)}}}},5274:e=>{let t={id:"210",member_of:"Text",name:"ReplaceCharacters",type:"function",returns:"string",description:["Replaces characters within a string.","Returns the modified string."],Parameters:{Text:{name:"Text",type:"string",required:!0,default:""},SearchCharacters:{name:"SearchCharacters",type:"string",required:!0,default:""},ReplacementText:{name:"ReplacementText",type:"string",required:!0,default:""},MaxTimes:{name:"MaxTimes",type:"number",format:"integer",required:!1,default:-1}}};e.exports=function(e){return{_Schema:t,ReplaceCharacters:function(t,r,n,o){t=e.Types.Coerce(t).ToString(),r=e.Types.Coerce(r).ToString(),n=e.Types.Coerce(n).ToString(),o=e.Types.Coerce(o).ToNumber();let a="",i=0;for(let e=0;e<t.length;e++){if(0<o&&i>=o){a+=t.slice(e);break}let s=t[e];0<=r.indexOf(s)&&(s=n,i++),a+=s}return a}}}},5168:e=>{let t={id:"211",member_of:"Text",name:"ReplaceText",type:"function",returns:"string",description:"",Parameters:{Text:{name:"Text",type:"string",required:!0,default:""},SearchText:{name:"SearchText",type:"string",required:!0,default:""},ReplacementText:{name:"ReplacementText",type:"string",required:!0,default:""},MaxTimes:{name:"MaxTimes",type:"number",required:!1,default:1}}};e.exports=function(e){return{_Schema:t,ReplaceText:function(e,t,r,n){if("string"!=typeof e)throw new Error("The parameter [Text] is required and must be a string.");if("string"!=typeof t)throw new Error("The parameter [SearchText] is required and must be a string.");if("string"!=typeof r)throw new Error("The parameter [ReplacementText] is required and must be a string.");if("number"!=typeof(n=void 0===n?1:n))throw new Error("The parameter [MaxTimes] is optional but must be a number.");let o=e,a=0;for(;!(0<=n&&a>=n);){var i=o.indexOf(t);if(i<0)break;o=""+o.substring(0,i)+r+o.substring(i+t.length),a++}return o}}}},8499:e=>{let t={id:"213",member_of:"Text",name:"FindBetween",type:"function",returns:"string",returns_description:"The text found between StartText and EndText.",summary:"Search a string and return the text found between StartText and EndText.",description:"\nThis function searches a string for StartText and EndText and returns all text found between the two.\n\nIf StartText is missing, then the search will return all text up to the found EndText.\n\nIf EndText is missing, then the search will return all text found after StartText.\n\nIf both StartText and EndText are missing, then the entire Text string will be returned.\n\nIf StartText or EndText are not found within Text, then a `null` is returned.\n\n",Parameters:{Text:{name:"Text",type:"string",required:!0,default:""},StartText:{name:"StartText",type:"string",required:!1,default:""},EndText:{name:"EndText",type:"string",required:!1,default:""}}};e.exports=function(e){return{_Schema:t,FindBetween:function(e,t,r){if("string"!=typeof e)throw new Error("The parameter [Text] is required and must be a string.");if(null==r&&(r=""),"string"!=typeof(t=null==t?"":t))throw new Error("The parameter [StartText] is optional but must be a string.");if("string"!=typeof r)throw new Error("The parameter [EndText] is optional but must be a string.");let n=0;if((n=t.length?e.indexOf(t):n)<0)return null;let o=e.length;return(o=r.length?e.indexOf(r,n+t.length):o)<0?null:e.substring(n+t.length,o)}}}},1572:e=>{let t={id:"214",member_of:"Text",name:"ReplaceBetween",type:"function",returns:"integer",returns_description:"The new string with replacements performed.",summary:"Search a string for StartText and EndText and replace the text found between the two.",description:"\nThis function searches a string for StartText and EndText and replaces all text found between the two.\n\nIf StartText is missing, then all text found up to EndText will be replaced.\n\nIf EndText is missing, then all text found after StartText will be replaced.\n\nIf both StartText and EndText are missing, then the entire Text string will be replaced.\n\nIf StartText or EndText are not found within Text, then this function returns `0` to indicate that no replacements were performed.\n\nThe MaxTimes parameter specifies the maximum number of replacements to perform.\nIf MaxTimes is `-1`, then all possible replacements will be made throughout Text.\n",Parameters:{Text:{name:"Text",type:"string",required:!0,default:""},StartText:{name:"StartText",type:"string",required:!1,default:""},EndText:{name:"EndText",type:"string",required:!1,default:""},ReplacementText:{name:"ReplacementText",type:"string",required:!0,default:""},MaxTimes:{name:"MaxTimes",type:"number",required:!1,default:1}}};e.exports=function(e){return{_Schema:t,ReplaceBetween:function(t,r,n,o,a){if("string"!=typeof t)throw new Error("The parameter [Text] is required and must be a string.");if(null==n&&(n=""),"string"!=typeof(r=null==r?"":r))throw new Error("The parameter [StartText] is optional but must be a string.");if("string"!=typeof n)throw new Error("The parameter [EndText] is optional but must be a string.");if("string"!=typeof o)throw new Error("The parameter [ReplacementText] is required and must be a string.");if("number"!=typeof(a=void 0===a?1:a))throw new Error("The parameter [MaxTimes] is optional but must be a number.");let i=t,s=0;for(;!(0<=a&&s>=a);){var l=e.Text.FindBetween(i,r,n);if(null===l)break;i=e.Text.ReplaceText(i,""+r+l+n,""+r+o+n,1),s++}return i}}}},6219:e=>{let t={id:"220",member_of:"Text",name:"FirstWord",type:"function",returns:"string",description:["Returns the first word of a text phrase."],Parameters:{Phrase:{name:"Phrase",type:"string",required:!1,default:"",description:"A text phrase containing words separated by delimiters."},Delimiters:{name:"Delimiters",type:"string",required:!1,default:" ",description:"A string of whitespace and punctuation characters that break the phrase into words."}}};e.exports=function(e){return{_Schema:t,FirstWord:function(t,r){t=e.Types.Coerce(t).ToString(),r=e.Types.Coerce(r).ToString();let n=-1;for(let e=0;e<t.length;e++){var o=t.substr(e,1);if(0<=r.indexOf(o)){if(0<=n)return t.substr(n,e-n)}else n<0&&(n=e)}return n<0?"":t.substr(n)}}}},7831:e=>{let t={id:"221",member_of:"Text",name:"AfterFirstWord",type:"function",returns:"string",description:["Returns the remainder of a text phrase occurring after the first word."],Parameters:{Phrase:{name:"Phrase",type:"string",required:!1,default:"",description:"A text phrase containing words separated by delimiters."},Delimiters:{name:"Delimiters",type:"string",required:!1,default:" ",description:"A string of characters that break the phrase into words."}}};e.exports=function(e){return{_Schema:t,AfterFirstWord:function(t,r){t=e.Types.Coerce(t).ToString(),r=e.Types.Coerce(r).ToString();for(let e=0;e<t.length;e++){let n=t.substr(e,1);if(0<=r.indexOf(n)){for(;0<=r.indexOf(n)&&!(++e>=t.length);)n=t.substr(e,1);return t.substr(e)}}return""}}}},955:e=>{let t={id:"222",member_of:"Text",name:"LastWord",type:"function",returns:"string",description:["Returns the last word of a text phrase."],Parameters:{Phrase:{name:"Phrase",type:"string",required:!1,default:"",description:"A text phrase containing words separated by delimiters."},Delimiters:{name:"Delimiters",type:"string",required:!1,default:" ",description:"A string of characters that break the phrase into words."}}};e.exports=function(e){return{_Schema:t,LastWord:function(t,r){t=e.Types.Coerce(t).ToString(),r=e.Types.Coerce(r).ToString();let n=-1;for(let e=t.length-1;0<=e;e--){var o=t.substr(e,1);if(0<=r.indexOf(o)){if(0<n)return t.substr(e+1,n-e)}else n<0&&(n=e)}return n<0?"":t.substr(0,n-index)}}}},5863:e=>{let t={id:"223",member_of:"Text",name:"BeforeLastWord",type:"function",returns:"string",description:["Returns the remainder of a text phrase occurring befiore the last word."],Parameters:{Phrase:{name:"Phrase",type:"string",required:!1,default:"",description:"A text phrase containing words separated by delimiters."},Delimiters:{name:"Delimiters",type:"string",required:!1,default:" ",description:"A string of characters that break the phrase into words."}}};e.exports=function(e){return{_Schema:t,BeforeLastWord:function(t,r){t=e.Types.Coerce(t).ToString(),r=e.Types.Coerce(r).ToString();for(let e=t.length-1;0<=e;e--){var n=t.substr(e,1);if(0<=r.indexOf(n))return t.substr(0,e)}return""}}}},7337:(e,t,r)=>{let n={id:"300",name:"Shapes",type:"namespace",summary:"Functions for manipulating data in different shapes."};e.exports=function(e){return{_Schema:n,Matrix:r(3694)(e).Matrix}}},3694:e=>{let t={id:"310",member_of:"Shapes",name:"Matrix",type:"function",returns:"object",returns_summary:"Returns a new Matrix object.",summary:"Matrix stores a two-dimensional jagged array and exposes manipulation functions.",description:"\nA Matrix object is essentially a two-dimensional array (an array of arrays).\nThis function will create and return a new Matrix object.\n\n\n***Values Parameter***\n\nYou can specify the initial contents of the Matrix with the Values parameter.\nIf Values is an array of arrays, then Matrix will contain those values.\nIf Values is a one-dimensional array, then Matrix will have a single row reflecting those values.\nIf Values is an integer, then Matrix will be created with that number of blank rows.\n\nNote that the only way to create a new Matrix with no rows in it is: `Shapes.Matrix( 0, Options )`\n\n\n***Options Parameter***\n\nThe Options parameter is an options object:\n~~~javascript\nOptions = {\n\tdefault_value: null,    // A default value to use when no other value exists.\n\tclone_values: true,     // If true, any values read from or written to the Matrix are cloned first.\n}\n~~~\n\nThe `clone_values` option is very important.\nIt is initialliy set to true, providing the safest and most sensible operation.\nA performance improvement can be had by setting this to false;\nHowever, unintended consequences may occur if you are not careful.\nAlsa, this is a valid intended consequence if you want to use Matrix to quickly manipulate an existing array.\n\nFor example:\n~~~javascript\nlet test_array = [\n\t[ 1, 2, 3, 4 ],\n\t[ 5, 6, 7, 8 ],\n];\n// test_array.length == 2\n// Encapsulate the array in a matrix.\nlet matrix = Liquicode.Shapes.Matrix( test_array, { clone_values: false } );\n// Append a row to the matrix.\nmatrix.AppendRows( [ 'A', 'B', 'C' ] );\n// Since test_array was not cloned first, the new row also appears in test_array.\n// test_array.length == 3 !!!\n~~~\n\n\n***How It Works***\n\nThe Matrix object contains a `RowData` member which is an array of arrays that contains the values for the matrix.\nThis is maintained as a jagged array, meaning that each row of the matrix may be of different lengths.\n~~~javascript\n[\t// Matrix maintains values in a jagged array:\n\t[ 1, 2, 3, 4 ],\n\t[ 1, 2, 3 ],\n\t[ 1, 2, 3, 4, 5 ],\n]\n~~~\n\nWhen calling the `AppendColumns`, `InsertColumns`, `SetColumn`, or `SetValue` functions,\nit may be necessary for the matrix to fill out the columns of shorter rows so that the target column exists.\nFor example, appending a blank column (`AppendColumns()`) to the matrix above would yield:\n~~~javascript\n[\t// Matrix fills columns with\n\t// default values as needed:\n\t[ 1, 2, 3, 4,    null, null ],\n\t[ 1, 2, 3, null, null, null ],\n\t[ 1, 2, 3, 4,    5,    null ],\n]\n~~~\nYou can change the value used to fill blank columns by changing `Option.default_value`.\n\n\n***Cell Addressing***\n\nWhen working with Matrix, you will usually need to identify a particular Row or Column to work with.\nMatrix supports three types of addressing modes:\n\n- 1) A zero-based index used as a row/column index.\nThis index must be greater than or equal to zero and less than the extent (i.e. the RowCount or ColumnCount).\n\n- 2) A negative index that serves as an offset from the extent (e.g. -1 = RowCount - 1).\nThis type of index must be between -extent and -1, inclusive.\n\n- 3) A spreadsheet style address (e.g. 'A1', 'B2', etc.).\nThis type of address has letters component which indicates a column.\nThis is followed by a digits component that is a one-based row number.\n\n\n***Matrix Functions***\n\nThe Matrix object also has a number of functions which allow you to manipulate the Matrix object.\n\n- Addressing Functions:\n\tThese are utility functions that assist when working with the spreadsheet style of addressing.\n\tThese functions are used internally by Matrix.\n\tThey do not consider the validity of any particular address or index within the current Matrix.\n\n\t- `IsValidAddress( Address )`:\n\t\tReturns `true` if Address is a valid address, otherwise `false`.\n\t\tA valid address must contain a column component in letters ('AB') and a row component in digits ('12').\n\t\tThis function determines only if the Address parameter is a properly formatted address,\n\t\tregardless if the address lies outside the bounds of this particular Matrix.\n\n\t- `NumberToLetters( Number )`:\n\t\tReturns the letters component of an address for any positive number (e.g. 1='A', 2='B', 28='AB', etc.).\n\n\t- `LettersToNumber( Address )`:\n\t\tConverts the letters component of an address to a positive number.\n\t\tAddress is a string that starts with, or is entirely composed of, letters.\n\n- Row Functions:\n\t\n\t- `RowIndexOf( Address )`:\n\tWill return a valid row index for this Matrix from the given Address.\n\tAddress can represent any of the three addressing styles.\n\n\t- `RowCount()`:\n\tReturns the number of rows within the Matrix.\n\n\t- `AppendRows( Values )`:\n\tAppends one or more rows to the end of the Matrix.\n\tIf Values is not supplied, then a blank row is appended.\n\tIf Values is a one-dimensional array, then a single row is appended.\n\tIf Values is a two-dimensional array, then multiple rows are appended.\n\n\t- `InsertRows( Row, Values )`:\n\tInserts one or more rows within the Matrix, starting at the given Row address.\n\tIf Values is not supplied, then a blank row is appended.\n\tIf Values is a one-dimensional array, then a single row is appended.\n\tIf Values is a two-dimensional array, then multiple rows are appended.\n\tNote that it is not possible to append a row to a Matrix by using this function.\n\n\t- `DeleteRows( Row, Count )`:\n\tDeletes one or more rows within the Matrix, starting at the given Row address.\n\tIf Count is not supplied, then a single row is deleted.\n\n\t- `GetRow( Row )`:\n\tReturns a single row of values from the Matrix, at the given Row address.\n\n\t- `SetRow( Row, Values )`:\n\tReplaces a single row of values (a one-dimensional array) within the Matrix, at the given Row address.\n\tIf Values is not supplied, then a blank row is set at that location.\n\n- Column Functions:\n\n\t- `ColumnIndexOf( Address )`:\n\tWill return a valid column index for this Matrix from the given Address.\n\tAddress can represent any of the three addressing styles.\n\n\t- `ColumnCount()`:\n\tReturns the number of columns within the Matrix.\n\n\t- `AppendColumns( Values )`:\n\tAppends one or more columns to the end of the Matrix.\n\tIf Values is not supplied, then a blank column is appended.\n\tIf Values is a one-dimensional array, then a single column is appended.\n\tIf Values is a two-dimensional array, then multiple columns are appended.\n\n\t- `InsertColumns( Column, Values )`:\n\tInserts one or more columns within the Matrix, starting at the given Column address.\n\tIf Values is not supplied, then a blank column is appended.\n\tIf Values is a one-dimensional array, then a single column is appended.\n\tIf Values is a two-dimensional array, then multiple columns are appended.\n\tNote that it is not possible to append a column to a Matrix by using this function.\n\n\t- `DeleteColumns( Column, Count )`:\n\tDeletes one or more columns within the Matrix, starting at the given Column address.\n\tIf Count is not supplied, then a single column is deleted.\n\n\t- `GetColumn( Column )`:\n\tReturns a single column of values from the Matrix, at the given Column address.\n\n\t- `SetColumn( Column, Values )`:\n\tReplaces a single column of values (a one-dimensional array) within the Matrix, at the given Column address.\n\tIf Values is not supplied, then a blank column is set at that location.\n\n- Value Functions:\n\n\t- `GetValue( Row, Column )`:\n\tReturns a single value located at Row and Column within the Matrix.\n\tRow can be a string address, in which case the Column parameter is omitted.\n\n\t- `SetValue( Row, Column, Value )`:\n\tSets a single value located at Row and Column within the Matrix.\n\tRow can be a string address, in which case the Column parameter is omitted.\n\t\n\t- `GetMatrix( Row, Column, RowCount, ColumnCount )`:\n\tConstructs a new Matrix of values from within the called Matrix.\n\tValues are taken starting at the location described by Row and Column and extending for RowCount rows and ColumnCount columns.\n\t\t- You can call this using four parameters: `GetMatrix( Row, Column, RowCount, ColumnCount )`\n\t\t- You can call this using three parameters: `GetMatrix( Address, RowCount, ColumnCount )`\n\t\t- You can call this using two parameters: `GetMatrix( Address, Size )`\n\n\t- `SetMatrix( Row, Column, Matrix )`:\n\tSets a matrix of values starting at Row and Column.\n\n- Table Functions:\n\n\t- `Clone()`:\n\tReturn a clone of this matrix.\n\tThe clone will contain a copy of this matrix's data and options.\n\n\t- `Transpose()`:\n\tReturn a copy of this matrix with its rows and column transposed.\n\n\t- `Join( AtColumn, JoinType, JoinMatrix, MatrixColumn )`:\n\tReturn a new matrix by joining this matrix with another one.\n\tThe join is produced by matching column values between the two matrices.\n\tThe different supported join types are: 'inner', 'left', 'right', and 'full'.\n\n",Parameters:{Values:{name:"Values",type:"object",required:!0,default:[[]],description:"One of: a two-dimensional array of arrays, a one-dimensional array of values, or an integer."},Options:{name:"Options",type:"object",required:!1,default:{},description:"Set of options controlling Matrix operation."}}};e.exports=function(e){return{_Schema:t,Matrix:function(t,r){if(e.Types.IsFormat(t,"number:integer")){var n=t;t=[];for(let e=0;e<n;e++)t.push([])}else if(!e.Types.IsFormat(t,"object:array-array")){if(!e.Types.IsFormat(t,"object:array"))throw new Error("The Values parameter must be one of: an array of arrays, a single row of values, or a row count.");t=[t]}r=e.Object.Merge({default_value:null,clone_values:!0},r=void 0===r?{}:r);let o={RowData:JSON.parse(JSON.stringify(t)),Options:JSON.parse(JSON.stringify(r)),IsValidAddress:function(e){if("string"!=typeof e)return!1;e=e.toUpperCase();var t="ABCDEFGHIJKLMNOPQRSTUVWXYZ";let r=!1,n=!1;for(let o=0;o<e.length;o++)if(r)if(0<=t.indexOf(e[o])){if(n)return!1}else{if(!(0<="0123456789".indexOf(e[o])))return!1;if(!r)return!1;n=!0}else{if(t.indexOf(e[o])<0)return!1;r=!0}return!!r&&!!n},NumberToLetters:function(t){if(!e.Types.IsFormat(t,"number:integer"))throw new Error("The Number parameter must be a positive integer.");if(t<=0)throw new Error("The Number parameter must be a positive integer.");for(var r="",n=1,o=26;0<=(t-=n);n=o,o*=26)r=String.fromCharCode(parseInt(t%o/n)+65)+r;return r},LettersToNumber:function(t){if(!e.Types.IsFormat(t,"string:string"))throw new Error("The Address parameter must be a string of letters.");t=t.toUpperCase();var r="ABCDEFGHIJKLMNOPQRSTUVWXYZ";let n="",o=0;for(let e=0;e<t.length&&!(r.indexOf(t[e])<0);e++)n+=t[e];for(let e=0;e<n.length;e++){var a=r.indexOf(t[e]);if(a<0)break;o+=(a+1)*r.length**(n.length-(e+1))}return o},RowIndexOf:function(e){let t=null;if("string"==typeof e){if(t=Number(e),isNaN(t)){if(!this.IsValidAddress(e))throw new Error(`The value "${e}" is not a valid address.`);for(let r=0;r<e.length;r++)if(0<="0123456789".indexOf(e[r])){t=Number(e.substring(r)),t--;break}}if(isNaN(t))throw new Error(`Unable to determine the row index of "${e}".`)}else{if("number"!=typeof e)throw new Error('The AddressOrIndex parameter must be a string address (e.g. "C2") or an integer.');t=Math.floor(e)}var r=this.RowData.length;if(t>=r)throw new Error("The row index cannot be greater than or equal to the row count.");if(t<0&&(t+=r),t<0)throw new Error("The row index cannot be less than zero.");return t},RowCount:function(){return this.RowData.length},AppendRows:function(t){if(!e.Types.IsFormat(t=void 0===t?[]:t,"object:array"))throw new Error("The Values parameter must be an array of values.");if(this.Options.clone_values&&(t=JSON.parse(JSON.stringify(t))),e.Types.IsFormat(t,"object:array-array"))for(let e=0;e<t.length;e++)this.RowData.push(t[e]);else this.RowData.push(t)},InsertRows:function(t,r){if(!e.Types.IsFormat(r=void 0===r?[]:r,"object:array"))throw new Error("The Values parameter must be an array of values.");var n=this.RowIndexOf(t);if(this.Options.clone_values&&(r=JSON.parse(JSON.stringify(r))),e.Types.IsFormat(r,"object:array-array"))for(let e=0;e<r.length;e++)this.RowData.splice(n+e,0,r[e]);else this.RowData.splice(n,0,r)},DeleteRows:function(t,r){if(!e.Types.IsFormat(r=void 0===r?1:r,"number:integer"))throw new Error("The RowCount parameter must be a positive integer.");if(r<=0)throw new Error("The RowCount parameter must be a positive integer.");t=this.RowIndexOf(t),this.RowData.splice(t,r)},GetRow:function(e){e=this.RowIndexOf(e);let t=this.RowData[e];return this.Options.clone_values?JSON.parse(JSON.stringify(t)):t},SetRow:function(t,r){if(!e.Types.IsFormat(r=void 0===r?[]:r,"object:array"))throw new Error("The Values parameter must be an array of values.");t=this.RowIndexOf(t),this.Options.clone_values&&(r=JSON.parse(JSON.stringify(r))),this.RowData[t]=r},ColumnIndexOf:function(e){let t=null;if("string"==typeof e){if(t=Number(e),isNaN(t)){if(!this.IsValidAddress(e))throw new Error(`The value "${e}" is not a valid address.`);if(0===(t=this.LettersToNumber(e)))throw new Error('The AddressOrIndex parameter must be a string address (e.g. "C2") or an integer.');t--}}else{if("number"!=typeof e)throw new Error('The AddressOrIndex parameter must be a string address (e.g. "C2") or an integer.');t=Math.floor(e)}if(t>=(e=this.ColumnCount()))throw new Error("The column index cannot be greater than or equal to the column count.");if(t<0&&(t+=e),t<0)throw new Error("The column index cannot be less than zero.");return t},ColumnCount:function(){let e=0;for(let t=0;t<this.RowData.length;t++)e<this.RowData[t].length&&(e=this.RowData[t].length);return e},AppendColumns:function(t){if(!e.Types.IsFormat(t=void 0===t?[]:t,"object:array"))throw new Error("The Values parameter must be an array of values.");e.Types.IsFormat(t,"object:array-array")||(t=[t]);var r=this.ColumnCount();for(let e=0;e<this.RowData.length;e++){let o=this.RowData[e];for(;o.length<r;)o.push(this.Options.default_value);for(let r=0;r<t.length;r++){var n=t[r];let a=this.Options.default_value;e<n.length&&(a=n[e],this.Options.clone_values&&(a=JSON.parse(JSON.stringify(a)))),o.push(a)}}},InsertColumns:function(t,r){if(!e.Types.IsFormat(r=void 0===r?[]:r,"object:array"))throw new Error("The Values parameter must be an array of values.");e.Types.IsFormat(r,"object:array-array")||(r=[r]);var n=this.ColumnIndexOf(t);for(let e=0;e<this.RowData.length;e++){let t=this.RowData[e];for(;t.length<=n;)t.push(this.Options.default_value);for(let a=0;a<r.length;a++){var o=r[a];let i=this.Options.default_value;e<o.length&&(i=o[e],this.Options.clone_values&&(i=JSON.parse(JSON.stringify(i)))),t.splice(n+a,0,i)}}},DeleteColumns:function(t,r){if(!e.Types.IsFormat(r=void 0===r?1:r,"number:integer"))throw new Error("The ColumnCount parameter must be a positive integer.");if(r<=0)throw new Error("The ColumnCount parameter must be a positive integer.");var n=this.ColumnIndexOf(t);for(let e=0;e<this.RowData.length;e++){let t=this.RowData[e];t.length>n&&t.splice(n,r)}},GetColumn:function(e){let t=[];var r=this.ColumnIndexOf(e);for(let e=0;e<this.RowData.length;e++){var n=this.RowData[e];let o=this.Options.default_value;r<n.length&&(o=n[r],this.Options.clone_values&&(o=JSON.parse(JSON.stringify(o)))),t.push(o)}return t},SetColumn:function(t,r){if(!e.Types.IsFormat(r=void 0===r?[]:r,"object:array"))throw new Error("The Values parameter must be an array of values.");var n=this.ColumnIndexOf(t);for(let e=0;e<this.RowData.length;e++){let t=this.RowData[e];for(;t.length<=n;)t.push(this.Options.default_value);let o=this.Options.default_value;e<r.length&&(o=r[e],this.Options.clone_values&&(o=JSON.parse(JSON.stringify(o)))),t[n]=o}},GetValue:function(e,t){let r=null,n=null;n="string"==typeof e&&void 0===t?(r=this.RowIndexOf(e),this.ColumnIndexOf(e)):(r=this.RowIndexOf(e),this.ColumnIndexOf(t)),e=this.RowData[r];let o=this.Options.default_value;return n<e.length&&(o=e[n],this.Options.clone_values&&(o=JSON.parse(JSON.stringify(o)))),o},SetValue:function(e,t,r){let n=null,o=null,a=("string"==typeof e&&void 0===r?(n=this.RowIndexOf(e),o=this.ColumnIndexOf(e),r=t):(n=this.RowIndexOf(e),o=this.ColumnIndexOf(t)),void 0===r&&(r=this.Options.default_value),this.RowData[n]);for(;o>=a.length;)a.push(this.Options.default_value);let i=r;this.Options.clone_values&&(i=JSON.parse(JSON.stringify(i))),a[o]=i},GetMatrix:function(t,r,n,o){let a=null,i=null;if("string"==typeof t&&void 0===o?(a=this.RowIndexOf(t),i=this.ColumnIndexOf(t),o=n,n=r):(a=this.RowIndexOf(t),i=this.ColumnIndexOf(r)),void 0===n)throw new Error("The RowCount parameter is required.");void 0===o&&(o=n);let s=e.Shapes.Matrix(0,this.Options);for(let e=0;e<n&&!(a+e>=this.RowData.length);e++){var l=this.GetRow(a+e);let t=[];for(let e=0;e<o&&!(i+e>=l.length);e++)t.push(l[i+e]);s.AppendRows(t)}return s},SetMatrix:function(e,t,r){let n=null,o=null;if("string"==typeof e&&void 0===r?(n=this.RowIndexOf(e),o=this.ColumnIndexOf(e),r=t):(n=this.RowIndexOf(e),o=this.ColumnIndexOf(t)),void 0===r)throw new Error("The Matrix parameter is required.");if(null===r)throw new Error("The Matrix parameter is required.");var a=r.RowCount(),i=r.ColumnCount();for(let e=0;e<a;e++)for(let t=0;t<i;t++){var s=r.GetValue(e,t);s=JSON.parse(JSON.stringify(s)),this.SetValue(n+e,o+t,s)}},Clone:function(){return e.Shapes.Matrix(JSON.parse(JSON.stringify(this.RowData)),JSON.parse(JSON.stringify(this.Options)))},Transpose:function(){let t=e.Shapes.Matrix(0);var r=this.ColumnCount();for(let e=0;e<r;e++){var n=this.GetColumn(e);t.AppendRows(n)}return t},Join:function(t,r,n,o){let a=this.ColumnCount(),i=n.ColumnCount(),s=this.GetColumn(t),l=n.GetColumn(o),u=this.RowData,c=n.RowData,f=[];if("inner"===(r=r.toLowerCase()))s.forEach(((e,t)=>{l.forEach(((r,n)=>{r===e&&f.push({left:t,right:n})}))}));else if("left"===r)s.forEach(((e,t)=>{let r=0;l.forEach(((n,o)=>{n===e&&(f.push({left:t,right:o}),r++)})),r||f.push({left:t,right:null})}));else if("right"===r)l.forEach(((e,t)=>{let r=0;s.forEach(((n,o)=>{e===n&&(f.push({left:o,right:t}),r++)})),r||f.push({left:null,right:t})}));else{if("full"!==r)throw new Error(`The [JoinType] parameter has an unknown value "${r}".`);s.forEach(((e,t)=>{let r=0;l.forEach(((n,o)=>{n===e&&(f.push({left:t,right:o}),r++)})),r||f.push({left:t,right:null})})),l.forEach(((e,t)=>{let r=0;s.forEach(((t,n)=>{e===t&&r++})),r||f.push({left:null,right:t})}))}let m=[];return f.forEach((e=>{let t=[],r=!1;for(let n=0;n<a;n++)null!==e.left&&n<u[e.left].length?(t.push(u[e.left][n]),r=!0):t.push(this.Options.default_value);for(let n=0;n<i;n++)null!==e.right&&n<c[e.right].length?(t.push(c[e.right][n]),r=!0):t.push(this.Options.default_value);r&&m.push(t)})),this.Options.clone_values&&(m=JSON.parse(JSON.stringify(m))),e.Shapes.Matrix(m,this.Options)}};return r.clone_values&&(t=JSON.parse(JSON.stringify(t))),o.RowData=t,o}}}},9470:(e,t,r)=>{let n={id:"500",name:"Parse",type:"namespace",summary:"Functions for tokenizing text strings."};e.exports=function(e){return{_Schema:n,TokenizeOptions:r(4759)(e).TokenizeOptions,Tokenize:r(9304)(e).Tokenize,DateParse:r(362)(e).DateParse}}},4759:e=>{let t={id:"501",member_of:"Parse",name:"TokenizeOptions",type:"function",returns:"object",description:["Returns a set of options for calling Tokenize().","Throws an error if an invalid value for PresetName is given."],Parameters:{Text:{name:"PresetName",type:"string",required:!1,default:"",description:["To retrieve an options preset, use one of: 'csv', or 'cli'","You can leave this empty or 'default' for the default options."]}}};e.exports=function(e){return{_Schema:t,TokenizeOptions:function(e){let t={whitespace:" \t\r\n",symbols:".;,:<>+-*/^()[]{}=",literal_delimiters:"'\"",literal_escape_chars:"\\",self_escape_literal_delimiters:!1,keywords:[],keywords_are_case_sensitive:!1,discard_whitespace:!1,resolve_literal_values:!1,resolve_numeric_values:!1};if(e&&"default"!==e)if("csv"===e)t.symbols=",",t.literal_delimiters='"',t.literal_escape_chars="\\",t.self_escape_literal_delimiters=!0,t.resolve_literal_values=!0;else{if("cli"!==e)throw new Error(`The parameter [PresetName] has an invalid value of [${e}]. Must be one of: 'default', 'csv', or 'cli'.`);t.whitespace=" \t\r\n",t.symbols="-:=",t.literal_delimiters="'\"",t.literal_escape_chars="\\",t.keywords=[],t.discard_whitespace=!0,t.resolve_literal_values=!0,t.resolve_numeric_values=!0}return t}}}},9304:e=>{let t={id:"502",member_of:"Parse",name:"Tokenize",type:"function",returns:"object",description:["Returns the parsed tokens."],Parameters:{Text:{name:"PresetName",type:"string",required:!1,default:"",description:["To retrieve an options preset, use one of: 'csv', or 'cli'","You can leave this empty for the default options."]}}};e.exports=function(e){const r="whitespace",n="literal",o="numeric";return{_Schema:t,Tokenize:function(t,a){var i=e.Parse.TokenizeOptions();i=e.Object.Merge(i,a);let s=[];if(t){let e=0;for(var l,u=t.length;e!==u;){let a=function(e,t,n){let o=n,a=t.length;for(;e.whitespace.includes(t.charAt(o))&&++o!==a;);return o===n?null:n={type:r,token:t.substring(n,o),at:n}}(i,t,e);if(!(a=(a=(a=(a=a||function(e,t,r){return e.symbols.includes(t.charAt(r))?e={type:"symbol",token:t.charAt(r),at:r}:null}(i,t,e))||function(e,t,r){if(!e.literal_delimiters.includes(t.charAt(r)))return null;let o=t.charAt(r),a=r+1,i=t.length;for(;!(a>=i);){var s=t.charAt(a);if(e.self_escape_literal_delimiters&&e.literal_delimiters.includes(s)&&a+1<i&&s===t.charAt(a+1))a++,a++;else if(e.literal_escape_chars.includes(s))a++,a++;else{if(s===o){a++;break}if(++a>=i)break}}return a===r?null:r={type:n,token:t.substring(r,a),at:r}}(i,t,e))||function(e,t){let r=t,n=e.length;for(;;){var a=e.charAt(r);if(!("0"<=a&&a<="9"||"."===a))break;if(++r===n)break}return r===t?null:t={type:o,token:e.substring(t,r),at:t}}(t,e))||function(e,t,r){let n=r,o=t.length;for(;;){var a=t.charAt(n);if(e.whitespace.includes(a))break;if(e.symbols.includes(a))break;if(e.literal_delimiters.includes(a))break;if(++n===o)break}if(n===r)return null;let i={type:"identifier",token:t.substring(r,n),at:r},s=!1;return s=e.keywords_are_case_sensitive?e.keywords.find((e=>e===i.token)):e.keywords.find((e=>e.toLowerCase()===i.token.toLowerCase())),s&&(i.type="keyword"),i}(i,t,e)))throw new Error(`Unable to continue parsing at location ${e}.`);e+=a.token.length,a&&a.type===r&&i.discard_whitespace||s.push(a)}l=i,s.forEach((e=>{e.type===o?l.resolve_numeric_values&&(0<=e.token.indexOf(".")?e.token=parseFloat(e.token):e.token=parseInt(e.token)):e.type===n&&l.resolve_literal_values&&(e.token=e.token.substr(1,e.token.length-2))}))}return s}}}},362:e=>{let t={id:"011",member_of:"Parse",name:"DateParse",type:"function",returns:"object",returns_summary:"Returns a `DateParts` object containing Date/Time detail.",description:["\nDates and times are funny little creatures.\n"],Parameters:{Value:{name:"Value",type:"string",required:!0},TimeZoneOffset:{name:"TimeZoneOffset",type:"string",required:!1,default:"+0000"}}};e.exports=function(e){const r={day_of_week:["monday","tuesday","wednesday","thursday","friday","saturday","sunday"],day_of_week_abbrev:["mon","tue","wed","thu","fri","sat","sun"],months:["january","february","march","april","may","june","july","august","september","october","november","december"],months_abbrev:["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"]};function n(e,t="+0000"){let n={date:null,year:0,month_num:0,month_name:"",day_of_month:0,day_of_week:0,day_name:"",hours:0,minutes:0,seconds:0,milliseconds:0,timezone_offset:""};return e&&!isNaN(e.getTime())&&(n.date=new Date(e.getTime()),n.year=n.date.getFullYear(),n.month_num=n.date.getMonth(),n.month_name=r.months[n.month_num],n.day_of_month=n.date.getDate(),n.day_of_week=n.date.getDay(),0===n.day_of_week&&(n.day_of_week=7),n.day_name=r.day_of_week[n.day_of_week-1],n.hours=n.date.getHours(),n.minutes=n.date.getMinutes(),n.seconds=n.date.getSeconds(),n.milliseconds=n.date.getMilliseconds(),n.timezone_offset=t),n}return{_Schema:t,DateParse:function(t,o="+0000"){if(!(t=(t=e.Types.Coerce(t).ToString()).toLowerCase().trim()))return n(null,o);if(!(o=o||"+0000").startsWith("+")&&!o.startsWith("-"))throw new Error("AssumeTimeZone must begin with a plus or minus sign.");var a=o.substr(1);if(4!==a.length||isNaN(a))throw new Error("AssumeTimeZone must have a four digit offset component.");let i=null;if(!isNaN(Number(t))){let e=Number(t).toString();if(8==e.length?e=e.substr(0,4)+"-"+e.substr(4,2)+"-"+e.substr(6,2)+" 00:00:00 "+o:10==e.length?(e+="000",e=Number(e)):13==e.length?e=Number(e):14==e.length&&(e=e.substr(0,4)+"-"+e.substr(4,2)+"-"+e.substr(6,2)+" "+e.substr(8,2)+":"+e.substr(10,2)+":"+e.substr(12,2)+" "+o),i=new Date(e),!isNaN(i.getTime()))return n(i,o)}if(24<=t.length&&"-"===t.substr(4,1)&&"-"===t.substr(7,1)&&"t"===t.substr(10,1)&&":"===t.substr(13,1)&&":"===t.substr(16,1)&&"."===t.substr(19,1)&&"z"===t.substr(23,1))try{i=new Date(t)}catch(a){}else if(20<=t.length&&"-"===t.substr(4,1)&&"-"===t.substr(7,1)&&"t"===t.substr(10,1)&&":"===t.substr(13,1)&&":"===t.substr(16,1)&&"z"===t.substr(19,1))try{i=new Date(t)}catch(a){}else a=function(e){let t=[];return e.forEach(((e,n)=>{var o;e.startsWith("+")||e.startsWith("utc+")||e.startsWith("gmt+")||e.startsWith("-")||e.startsWith("utc-")||e.startsWith("gmt-")?t.push({type:"zone",value:e}):e.includes(":")?t.push({type:"time",value:e}):r.months.includes(e)?(e=""+(o=r.months.indexOf(e)+1),o<10&&(e="0"+e),t.push({type:"month",value:e})):r.months_abbrev.includes(e)?(e=""+(o=r.months_abbrev.indexOf(e)+1),o<10&&(e="0"+e),t.push({type:"month",value:e})):isNaN(Number(e))?t.push({type:"text",value:e}):e.length<=2?(1===e.length&&(e="0"+e),t.push({type:"day-or-month",value:e})):4===e.length?t.push({type:"year",value:e}):t.push({type:"number",value:e})})),t}(function(e){let t=[];return e.split(" ").forEach(((e,r)=>{(e=(e=e.endsWith(",")?e.substr(0,e.length-1):e).endsWith(".")?e.substr(0,e.length-1):e).includes("/")?e.split("/").forEach((e=>t.push(e))):e.includes("-")?e.startsWith("-")||e.startsWith("utc-")||e.startsWith("gmt-")?t.push(e):e.split("-").forEach((e=>t.push(e))):e.includes(",")?e.split(",").forEach((e=>t.push(e))):t.push(e)})),t}(t)),i=function(e,t){let r={year:null,month:null,day:null,time:null,zone:null};if(e.forEach((e=>{"year"===e.type?r.year||(r.year=e.value):"month"===e.type?r.month||(r.month=e.value):"time"===e.type?r.time||(r.time=e.value):"zone"!==e.type||r.zone||(r.zone=e.value)})),e.forEach((e=>{"day-or-month"!==e.type||r.day&&r.month||(r.month?r.day=e.value:r.month=e.value)})),!r.year)return null;if(!r.month)return null;if(!r.day)return null;if(r.time||(r.time="00:00:00"),r.zone||(r.zone=t),r.zone){let e=r.zone,n="",o="",a=-1;1===(n=4<(n=(n=e.includes("-")?(o="-",a=e.indexOf("-"),e.substr(a+1)):e.includes("+")?(o="+",a=e.indexOf("+"),e.substr(a+1)):(o="+",e)).includes(":")?n.replace(":",""):n).length?n.substr(0,4):n).length?n=`0${n}00`:2===n.length?n+="00":3===n.length&&(n="0"+n),4===n.length?r.zone=""+o+n:r.zone=t}let n=`${r.year}-${r.month}-${r.day} ${r.time} `+r.zone,o=null;try{o=new Date(n)}catch(e){}return o}(a,o);return i&&!isNaN(i.getTime())?n(i,o):n(null,o)}}}},542:(e,t,r)=>{let n={id:"800",name:"System",type:"namespace",summary:"File system and process functions. (nodejs only)"};e.exports=function(e){return{_Schema:n,AsyncVisitFiles:r(6041)(e).AsyncVisitFiles,VisitFiles:r(5646)(e).VisitFiles,CountFiles:r(3641)(e).CountFiles,CountFolders:r(9807)(e).CountFolders,CopyFolder:r(951)(e).CopyFolder,DeleteFolder:r(1161)(e).DeleteFolder,EmptyFolder:r(2281)(e).EmptyFolder,WithFileText:r(2537)(e).WithFileText,AsyncSleep:r(1373)(e).AsyncSleep,ExecuteProcess:r(9119)(e).ExecuteProcess,AsyncExecuteProcess:r(1277)(e).AsyncExecuteProcess,StartProcess:r(9970)(e).StartProcess,StopProcess:r(9659)(e).StopProcess,ContainerStatus:r(7251)(e).ContainerStatus,RunContainer:r(1769)(e).RunContainer,StartContainer:r(596)(e).StartContainer,StopContainer:r(6050)(e).StopContainer,KillContainer:r(1675)(e).KillContainer}}},6041:(e,t,r)=>{let n={id:"810",member_of:"System",name:"AsyncVisitFiles",type:"function",returns:"*",description:"\nScans a folder and calls the Visitor callback function for each folder/file encountered.\n\nThe `FilePattern` parameter is optional and can be a wildcard type string.\nFor example, to visit all text files, you can pass '*.txt'.\nIf `FilePattern` is not empty, then the callback will not be called for folders.\n\nThe Visitor callback function takes two parameters `Visitor( Path, Filename )`.\nIf the Visitor callback returns a value, then the visitation process is halted\nand that value is returned by the `VisitFiles` function.\nThe Visitor callback is called for each file encountered and for each folder encountered.\nWhen called for a folder, the `Filename` parameter will be null.\nThe Visitor callback function can be either synchronous or asymchronous.\n",Parameters:{StartFolder:{name:"StartFolder",type:"string",required:!0},FilePattern:{name:"FilePattern",type:"string",required:!1,default:""},Recurse:{name:"Recurse",type:"boolean",required:!1,default:!1},Visitor:{name:"Visitor",type:"function",description:"Function to be called for each folder and file: Visitor( Path, Filename )",required:!1,default:null}}};e.exports=function(e){const t=r(7147),o=r(1017);return{_Schema:n,AsyncVisitFiles:async function r(n,a,i,s){if(n=e.Types.Coerce(n).ToString(),a=e.Types.Coerce(a).ToString(),i=e.Types.Coerce(i).ToBoolean(),t.existsSync(n)){var l=t.readdirSync(n);for(let m=0;m<l.length;m++){var u=l[m],c=o.join(n,u);if(t.lstatSync(c).isFile()){if(a){if(e.Text.Matches(u,a)&&s){var f=await s(n,u);if(void 0!==f)return f}}else if(s&&void 0!==(f=await s(n,u)))return f}else if(t.lstatSync(c).isDirectory()){if(!a&&s&&void 0!==(u=await s(c,null)))return u;if(i&&void 0!==(u=r(c,a,i,s)))return u}}}}}}},5646:(e,t,r)=>{let n={id:"810",member_of:"System",name:"VisitFiles",type:"function",returns:"*",description:"\nScans a folder and calls the Visitor callback function for each folder/file encountered.\n\nThe `FilePattern` parameter is optional and can be a wildcard type string.\nFor example, to visit all text files, you can pass '*.txt'.\nIf `FilePattern` is not empty, then the callback will not be called for folders.\n\nThe Visitor callback function takes two parameters `Visitor( Path, Filename )`.\nIf the Visitor callback returns a value, then the visitation process is halted\nand that value is returned by the `VisitFiles` function.\nThe Visitor callback is called for each file encountered and for each folder encountered.\nWhen called for a folder, the `Filename` parameter will be null.\nThe Visitor callback function must be synchronous.\n",Parameters:{StartFolder:{name:"StartFolder",type:"string",required:!0},FilePattern:{name:"FilePattern",type:"string",required:!1,default:""},Recurse:{name:"Recurse",type:"boolean",required:!1,default:!1},Visitor:{name:"Visitor",type:"function",description:"Function to be called for each folder and file: Visitor( Path, Filename )",required:!1,default:null}}};e.exports=function(e){const t=r(7147),o=r(1017);return{_Schema:n,VisitFiles:function r(n,a,i,s){if(n=e.Types.Coerce(n).ToString(),a=e.Types.Coerce(a).ToString(),i=e.Types.Coerce(i).ToBoolean(),t.existsSync(n)){var l=t.readdirSync(n);for(let m=0;m<l.length;m++){var u=l[m],c=o.join(n,u);if(t.lstatSync(c).isFile()){if(a){if(e.Text.Matches(u,a)&&s){var f=s(n,u);if(void 0!==f)return f}}else if(s&&void 0!==(f=s(n,u)))return f}else if(t.lstatSync(c).isDirectory()){if(!a&&s&&void 0!==(u=s(c,null)))return u;if(i&&void 0!==(u=r(c,a,i,s)))return u}}}}}}},3641:e=>{let t={id:"811",member_of:"System",name:"CountFiles",type:"function",returns:"number",description:["Scans a folder and calls the Visitor callback function for each folder/file encountered.","Returns the number of folders/files visited."],Parameters:{StartFolder:{name:"StartFolder",type:"string",required:!0},FilePattern:{name:"FilePattern",type:"string",required:!1,default:"*"},Recurse:{name:"Recurse",type:"boolean",required:!1,default:!1}}};e.exports=function(e){return{_Schema:t,CountFiles:function(t,r,n){return t=e.Types.Coerce(t).ToString(),r=e.Types.Coerce(r).ToString(),n=e.Types.Coerce(n).ToBoolean(),e.System.VisitFiles(t,r,n)}}}},9807:e=>{let t={id:"812",member_of:"System",name:"CountFolders",type:"function",returns:"number",description:["Scans a folder and calls the Visitor callback function for each folder/file encountered.","Returns the number of folders/files visited."],Parameters:{StartFolder:{name:"StartFolder",type:"string",required:!0},Recurse:{name:"Recurse",type:"boolean",required:!1,default:!1}}};e.exports=function(e){return{_Schema:t,CountFolders:function(t,r){t=e.Types.Coerce(t).ToString(),r=e.Types.Coerce(r).ToBoolean();let n=0;return e.System.VisitFiles(t,"",r,(function(e,t){e&&!t&&n++})),n}}}},951:(e,t,r)=>{let n={id:"813",member_of:"System",name:"CopyFolder",type:"function",returns:"number",description:["Copies files from one folder to another.","Returns the number of files copied."],Parameters:{FromFolder:{name:"FromFolder",type:"string",required:!0},ToFolder:{name:"ToFolder",type:"string",required:!0},FilePattern:{name:"FilePattern",type:"string",required:!1,default:"*"},Overwrite:{name:"Overwrite",type:"boolean",required:!1,default:!1},Recurse:{name:"Recurse",type:"boolean",required:!1,default:!1}}};e.exports=function(e){const t=r(7147),o=r(1017);return{_Schema:n,CopyFolder:function r(n,a,i,s,l){if(n=e.Types.Coerce(n).ToString(),a=e.Types.Coerce(a).ToString(),i=e.Types.Coerce(i).ToString(),s=e.Types.Coerce(s).ToBoolean(),l=e.Types.Coerce(l).ToBoolean(),!t.existsSync(n))return 0;t.mkdirSync(a,{recursive:!0});let u=0;var c=t.readdirSync(n);for(let e=0;e<c.length;e++){var f=c[e],m=o.join(n,f);f=o.join(a,f),t.lstatSync(m).isFile()?t.existsSync(f)&&!s||(t.copyFileSync(m,f),u++):l&&t.lstatSync(m).isDirectory()&&(u+=r(m,f,s,l))}return u}}}},1161:(e,t,r)=>{let n={id:"814",member_of:"System",name:"DeleteFolder",type:"function",returns:"number",description:["Deletes a folder and all of its sub-folders and files.","Returns the number of folders and files deleted."],Parameters:{Folder:{name:"Folder",type:"string",required:!0},Recurse:{name:"Recurse",type:"boolean",required:!1,default:!1}}};e.exports=function(e){const t=r(7147),o=r(1017);return{_Schema:n,DeleteFolder:function r(n,a){if(n=e.Types.Coerce(n).ToString(),a=e.Types.Coerce(a).ToBoolean(),!t.existsSync(n))return 0;let i=0;var s=t.readdirSync(n);for(let e=0;e<s.length;e++){var l=s[e];l=o.join(n,l),t.lstatSync(l).isFile()?(t.unlinkSync(l),i++):a&&t.lstatSync(l).isDirectory()&&(i+=r(l,a))}return a&&!t.readdirSync(n).length&&(t.rmdirSync(n),i++),i}}}},2281:(e,t,r)=>{let n={id:"815",member_of:"System",name:"EmptyFolder",type:"function",returns:"number",return_description:"Number of folders and files removed.",description:"\nEmpties a folder by removing all of its sub-folders and files.\n\nReturns the number of folders and files removed.\n",Parameters:{Folder:{name:"Folder",type:"string",required:!0}}};e.exports=function(e){const t=r(7147),o=r(1017);return{_Schema:n,EmptyFolder:function(r){return r=e.Types.Coerce(r).ToString(),t.existsSync(r)?function e(r,n){let a=0;var i=t.readdirSync(r);for(let l=0;l<i.length;l++){var s=i[l];s=o.join(r,s),t.lstatSync(s).isFile()?(t.unlinkSync(s),a++):t.lstatSync(s).isDirectory()&&(a+=e(s,n+1))}return 0<n&&(t.readdirSync(r).length||(t.rmdirSync(r),a++)),a}(r,0):0}}}},2537:(e,t,r)=>{let n={id:"816",member_of:"System",name:"WithFileText",type:"function",returns:"boolean",returns_description:"False if no changes were made or True if changes were saved.",description:"\nLoads content from a file and passes it to a callback function for processing.\n\nThe callback function takes two parameters: Filename and Text.\nFilename is the Filename passed to `WithFileText` and Text is the content of that file.\nThe callback function is expected to return either `undefined` or `null` if no changes are made to the text.\nIf changes are made, the callback function can return the new text which will be saved back to Filename.\n\nIf the file content is changed during callback processing, then `WithFileText` will return True.\n",Parameters:{Filename:{name:"Filename",type:"string",required:!0},FileTextCallback:{name:"FileTextCallback",type:"function",required:!0}}};e.exports=function(e){const t=r(7147);return{_Schema:n,WithFileText:function(e,r){var n=t.readFileSync(e,"utf-8");if(null==(r=r(e,n)))return!1;if("string"!=typeof r)throw new Error("The return value from [FileTextCallback] must be either undefined, null, or a text string.");return r!==n&&(t.writeFileSync(e,r),!0)}}}},1373:e=>{let t={id:"820",member_of:"System",name:"AsyncSleep",type:"function",description:"",Parameters:{Milliseconds:{name:"Milliseconds",type:"number",format:"integer"}}};e.exports=function(e){return{_Schema:t,AsyncSleep:function(t){return t=e.Types.Coerce(t).ToNumber(),new Promise((e=>setTimeout(e,t)))}}}},9119:(e,t,r)=>{let n={id:"821",member_of:"System",name:"ExecuteProcess",type:"function",description:"",Parameters:{Command:{name:"Command",type:"string",required:!0},Environment:{name:"Environment",type:"object",required:!1},StartFolder:{name:"StartFolder",type:"string",required:!1}}};e.exports=function(e){const t=r(7147),o=r(2081);return{_Schema:n,ExecuteProcess:function(e,r,n){let a={encoding:"utf-8"},i=(r&&Object.keys(r)&&(a.env=r),n&&t.existsSync(n)&&(a.cwd=n),{result:"",error:"",stdout:"",stderror:""});try{i.result=o.execSync(e,a,((e,t,r)=>{i.error=e,i.stdout=t,i.stderror=r}))}catch(e){i.error=e.message}return i}}}},1277:(e,t,r)=>{let n={id:"822",member_of:"System",name:"AsyncExecuteProcess",type:"function",description:"",Parameters:{Command:{name:"Command",type:"string",required:!0},Environment:{name:"Environment",type:"object",required:!1},StartFolder:{name:"StartFolder",type:"string",required:!1}}};e.exports=function(e){return r(2081),{_Schema:n,AsyncExecuteProcess:function(t,r,n){return new Promise(((o,a)=>{o(e.System.ExecuteProcess(t,r,n))}))}}}},9970:(e,t,r)=>{let n={id:"823",member_of:"System",name:"StartProcess",type:"function",returns:"string",description:"Starts a new process and returns the ProcessID.",Parameters:{Command:{name:"Command",type:"string",required:!0},Environment:{name:"Environment",type:"object",required:!1},StartFolder:{name:"StartFolder",type:"string",required:!1}}};e.exports=function(e){const t=r(7147),o=r(2081);return{_Schema:n,StartProcess:function(e,r,n){let a={};return r&&Object.keys(r)&&(a.env=r),n&&t.existsSync(n)&&(a.cwd=n),o.exec(e,a).pid}}}},9659:e=>{let t={id:"824",member_of:"System",name:"StopProcess",type:"function",returns:"string",description:"Stops a running process by its ProcessID.",Parameters:{ProcessID:{name:"ProcessID",type:"string",required:!0}}};e.exports=function(e){return{_Schema:t,StopProcess:function(e){process.kill(e,"SIGINT")}}}},7251:e=>{let t={id:"830",member_of:"System",name:"ContainerStatus",type:"function",returns:"string",description:"Gets the status of a running Docker Container.",Parameters:{ContainerID:{name:"ContainerID",type:"string",required:!0}}};e.exports=function(e){return{_Schema:t,ContainerStatus:function(t){let r=e.System.ExecuteProcess("docker inspect "+t);if(r.error){if(r.error.indexOf("Error: No such object"))return null;throw new Error(r.error)}let n=JSON.parse(r.result);return Array.isArray(n)&&n.length?n[0]:n}}}},1769:e=>{let t={id:"831",member_of:"System",name:"RunContainer",type:"function",returns:"string",description:"\nRuns a Docker Container.\n\nOptions Parameter:\n~~~javascript\n{\n\tname: '',           // Name of the container. Defaults to random name.\n\thostname: '',       // Hostname for the container.\n\tnetwork: '',        // Name of docker network for the container to use.\n\tports: [],          // Array of port object { localhost: 80, container: 80 }\n\tvolumes: [],        // Array of volume object { localhost: '/path', container: '/path' }\n\tenvironment: {},    // Environment variables and values.\n}\n~~~\n\nExample:\n~~~javascript\nlet container_id = Liquicode.RunContainer( 'mongo:latest',\n\t{\n\t\tname: 'mongo-server',\n\t\tports: [ { localhost: 27017, container: 27017 } ],\n\t} );\n~~~\n\n",Parameters:{ImageName:{name:"ImageName",type:"string",required:!0},Options:{name:"Options",type:"object",required:!1}}};e.exports=function(e){return{_Schema:t,RunContainer:function(t,r){let n="docker run --rm -d";if(r){if(r.name){if("string"!=typeof r.name)throw new Error("Options.name must be a string.");n+=" --name "+r.name}if(r.hostname){if("string"!=typeof r.hostname)throw new Error("Options.hostname must be a string.");n+=" --hostname "+r.hostname}if(r.network){if("string"!=typeof r.network)throw new Error("Options.network must be a string.");n+=` --network="${r.network}"`}if(r.ports){if(!Array.isArray(r.ports))throw new Error("Options.ports must be an array of port definitions.");for(let e=0;e<r.ports.length;e++){var o=r.ports[e];n+=` -p ${o.localhost}:`+o.container}}if(r.volumes){if(!Array.isArray(r.volumes))throw new Error("Options.volumes must be an array of volume definitions.");for(let e=0;e<r.volumes.length;e++){var a=r.volumes[e];n+=` -v ${a.localhost}:`+a.container,a.readonly&&(n+=":ro")}}if(r.environment){if("object"!=typeof r.environment)throw new Error("Options.environment must be an object.");var i=Object.keys(r.environment);for(let e=0;e<i.length;e++){var s=i[e];n+=` -e "${s}=${r.environment[s]}"`}}}n+=" "+t,r&&"string"==typeof r.command&&(n+=" "+r.command);let l=e.System.ExecuteProcess(n);if(l.error)throw new Error(l.error);return l.result.trim()}}}},596:e=>{let t={id:"832",member_of:"System",name:"StartContainer",type:"function",returns:"string",description:"Stops a running Docker Container.",Parameters:{ContainerID:{name:"ContainerID",type:"string",required:!0}}};e.exports=function(e){return{_Schema:t,StartContainer:function(t){if((t=e.System.ExecuteProcess("docker start "+t)).error)throw new Error(t.error)}}}},6050:e=>{let t={id:"833",member_of:"System",name:"StopContainer",type:"function",returns:"string",description:"Stops a running Docker Container.",Parameters:{ContainerID:{name:"ContainerID",type:"string",required:!0}}};e.exports=function(e){return{_Schema:t,StopContainer:function(t){if((t=e.System.ExecuteProcess("docker stop "+t)).error)throw new Error(t.error)}}}},1675:e=>{let t={id:"834",member_of:"System",name:"KillContainer",type:"function",returns:"string",description:"Kills a running Docker Container.",Parameters:{ContainerID:{name:"ContainerID",type:"string",required:!0}}};e.exports=function(e){return{_Schema:t,KillContainer:function(t){if((t=e.System.ExecuteProcess("docker kill "+t)).error)throw new Error(t.error)}}}},5579:(e,t,r)=>{let n={id:"900",name:"Network",type:"namespace",summary:"Functions for working with networks. (nodejs only)"};e.exports=function(e){return{_Schema:n,AsyncDownloadFile:r(6965)(e).AsyncDownloadFile,AsyncGetRequest:r(9893)(e).AsyncGetRequest}}},6965:(e,t,r)=>{let n={id:"910",member_of:"Network",name:"AsyncDownloadFile",type:"function",returns:"string",description:"Download a file from an url.",Parameters:{}};e.exports=function(e){const t=r(3685),o=r(5687);return{_Schema:n,AsyncDownloadFile:function(e,r){let n=null;if(e.toLowerCase().startsWith("http:"))n=t;else{if(!e.toLowerCase().startsWith("https:"))throw new Error("Unsupported protocol. Must be either http or https.");n=o}return new Promise(((t,o)=>{try{n.get(e,(function(e){const n=LIB_FS.createWriteStream(r);e.pipe(n),n.on("finish",(function(){n.close(),t(!0)}))}))}catch(e){o(e)}}))}}}},9893:(e,t,r)=>{let n={id:"920",member_of:"Network",name:"AsyncGetRequest",type:"function",returns:"string",description:"Make an http get request for a an url.",Parameters:{Url:{name:"Url",type:"string",required:!0}}};e.exports=function(e){const t=r(3685),o=r(5687);return{_Schema:n,AsyncGetRequest:function(e){let r=null;if(e.toLowerCase().startsWith("http:"))r=t;else{if(!e.toLowerCase().startsWith("https:"))throw new Error("Unsupported protocol. Must be http or https.");r=o}return new Promise(((t,n)=>{try{r.get(e,(function(e){e.on("data",(e=>{t(e)}))}))}catch(e){n(e)}}))}}}},4470:(e,t,r)=>{var n={version:"v0.0.19",environment:"node-min"};n.Types=r(526)(n),n.Object=r(867)(n),n.Text=r(1618)(n),n.Shapes=r(7337)(n),n.Parse=r(9470)(n),n.System=r(542)(n),n.Network=r(5579)(n),delete n.Types._Schema,delete n.Object._Schema,delete n.Text._Schema,delete n.Shapes._Schema,delete n.Parse._Schema,delete n.System._Schema,delete n.Network._Schema,e.exports=n},2081:e=>{e.exports=require("child_process")},7147:e=>{e.exports=require("fs")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},1017:e=>{e.exports=require("path")}},t={};return function r(n){var o=t[n];return void 0!==o||(o=t[n]={exports:{}},e[n](o,o.exports,r)),o.exports}(4470)})()));