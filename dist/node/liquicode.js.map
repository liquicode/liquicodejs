{"version":3,"file":"liquicode.js","mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;ACVa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAO,EAAE,sEAAyB;AAC9C;AACA,UAAU,mBAAO,EAAE,kEAAuB;AAC1C;AACA,WAAW,mBAAO,EAAE,oEAAwB;AAC5C,aAAa,mBAAO,EAAE,wEAA0B;AAChD,YAAY,mBAAO,EAAE,sEAAyB;AAC9C;AACA;AACA;;;;;;;;;;;;ACpCa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,0BAA0B;AAC1B,mEAAmE;AACnE,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,aAAa,qBAAqB,YAAY;AAC/D;AACA;AACA;AACA;AACA,iBAAiB,YAAY,sBAAsB;AACnD;AACA;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC,kCAAkC,OAAO,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,aAAa,qBAAqB,YAAY;;AAE/D;AACA;AACA;AACA,iBAAiB,YAAY,sBAAsB;;AAEnD;AACA;AACA,mCAAmC;AACnC,mCAAmC;AACnC,kCAAkC,OAAO,UAAU;AACnD;AACA;;AAEA,YAAY,GAAG;AACf;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,iCAAiC;AACjC;AACA;AACA;AACA,qCAAqC;AACrC,oCAAoC;AACpC,iCAAiC;AACjC;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,sCAAsC;AACtC,iCAAiC;AACjC;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,sCAAsC;AACtC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,sCAAsC;AACtC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,kBAAkB;AACjF,wFAAwF,kBAAkB;AAC1G;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,SAAS;AACzE;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9Ta;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kBAAkB;AAClB,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kBAAkB;AAClB,6BAA6B;AAC7B,4BAA4B;AAC5B,wBAAwB;AACxB;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,EAAE;AACF,CAAC;AACD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kBAAkB;AAClB,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA,EAAE;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kBAAkB;AAClB,6BAA6B;AAC7B,4BAA4B;AAC5B,wBAAwB;AACxB;AACA,EAAE;AACF,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oDAAoD;AACpD;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB;AACA,8BAA8B,oCAAoC;AAClE;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,iCAAiC;AACjC,wDAAwD;AACxD,gCAAgC;AAChC,wDAAwD;AACxD,gCAAgC;AAChC,yDAAyD;AACzD,iCAAiC;AACjC,0DAA0D;AAC1D,iCAAiC;AACjC,0DAA0D;AAC1D,iCAAiC;AACjC,0DAA0D;AAC1D,iCAAiC;AACjC,0DAA0D;AAC1D,iCAAiC;AACjC;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,iCAAiC;AACjC,wDAAwD;AACxD,gCAAgC;AAChC,wDAAwD;AACxD,gCAAgC;AAChC,yDAAyD;AACzD;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,gCAAgC;AAChC,wDAAwD;AACxD,gCAAgC;AAChC,wDAAwD;AACxD,gCAAgC;AAChC,wDAAwD;AACxD;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,4BAA4B;AAC5B,sCAAsC;AACtC;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,qCAAqC;AACrC;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,qCAAqC;AACrC,2BAA2B;AAC3B,yBAAyB,sBAAsB;AAC/C;AACA,kDAAkD;AAClD;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,qCAAqC;AACrC,2BAA2B;AAC3B,yBAAyB,sBAAsB;AAC/C;AACA,iDAAiD;AACjD;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,qCAAqC;AACrC,2BAA2B;AAC3B,yBAAyB,sBAAsB;AAC/C;AACA,iDAAiD;AACjD;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,qCAAqC;AACrC,2BAA2B;AAC3B,yBAAyB,sBAAsB;AAC/C;AACA,iDAAiD;AACjD;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,oBAAoB;AACpB,qCAAqC;AACrC,2BAA2B;AAC3B,yBAAyB,sBAAsB;AAC/C;AACA,iDAAiD;AACjD,+CAA+C;AAC/C;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjfa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA,cAAc,YAAY,GAAG,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1Fa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,GAAG;AACf;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA,sBAAsB,YAAY,GAAG,cAAc;AACnD;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3Ga;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4CAAS,QAAQ,CAAE;AAClC;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA,mBAAmB,mBAAO,EAAE,8DAA0B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;;;;;UEAA;UACA;UACA;UACA","sources":["webpack://@liquicode/liquicodejs/webpack/universalModuleDefinition","webpack://@liquicode/liquicodejs/./src/000-Types/000-Types.js","webpack://@liquicode/liquicodejs/./src/000-Types/001-Types.HasValue.js","webpack://@liquicode/liquicodejs/./src/000-Types/010-Types.Coerce.js","webpack://@liquicode/liquicodejs/./src/000-Types/020-Types.Formats.js","webpack://@liquicode/liquicodejs/./src/000-Types/021-Types.GetFormat.js","webpack://@liquicode/liquicodejs/./src/000-Types/022-Types.IsFormat.js","webpack://@liquicode/liquicodejs/./src/liquicode-node.js","webpack://@liquicode/liquicodejs/./src/ sync","webpack://@liquicode/liquicodejs/webpack/bootstrap","webpack://@liquicode/liquicodejs/webpack/runtime/hasOwnProperty shorthand","webpack://@liquicode/liquicodejs/webpack/before-startup","webpack://@liquicode/liquicodejs/webpack/startup","webpack://@liquicode/liquicodejs/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, () => {\nreturn ","\"use strict\";\r\n\r\n\r\n//---------------------------------------------------------------------\r\nlet _Schema = {\r\n\tid: '000',\r\n\tname: 'Types',\r\n\ttype: 'namespace',\r\n\tsummary: 'Data Type Handling',\r\n};\r\n\r\n\r\n//-start-jsdoc---------------------------------------------------------\r\n/**\n * @public\n * @namespace Types\n * @summary Data Type Handling\n*/\n//-end-jsdoc-----------------------------------------------------------\r\n\r\n\r\n//---------------------------------------------------------------------\r\nmodule.exports = function ( Liquicode )\r\n{\r\n\treturn {\r\n\t\t_Schema: _Schema,\r\n\r\n\t\tHasValue: require( './001-Types.HasValue.js' )( Liquicode ).HasValue,\r\n\r\n\t\tCoerce: require( './010-Types.Coerce.js' )( Liquicode ).Coerce,\r\n\r\n\t\tFormats: require( './020-Types.Formats.js' )( Liquicode ).Formats,\r\n\t\tGetFormat: require( './021-Types.GetFormat.js' )( Liquicode ).GetFormat,\r\n\t\tIsFormat: require( './022-Types.IsFormat.js' )( Liquicode ).IsFormat,\r\n\r\n\t};\r\n};\r\n","\"use strict\";\r\n\r\n\r\n//---------------------------------------------------------------------\r\nlet _Schema = {\r\n\tid: '001',\r\n\tmember_of: 'Types',\r\n\tname: 'HasValue',\r\n\ttype: 'function',\r\n\treturns: 'boolean',\r\n\treturns_description: 'True if Value actually contains a value.',\r\n\tsummary: 'Determine if a variable contains a value or or not.',\r\n\tdescription: `\r\nTests the provided Value parameter and returns false if it does not represent a value.\r\nMore specifically, if Value is undefined or null, then false is returned.\r\nif Value is a zero length string \\`\"\"\\` or an empty object \\`{}\\`, false is also returned.\r\nIn all other cases, this function returns true.\r\n`,\r\n\tParameters: {\r\n\t\tValue: {\r\n\t\t\tname: 'Value',\r\n\t\t\ttype: '*',\r\n\t\t\trequired: true,\r\n\t\t\tdescription: 'The value to test.',\r\n\t\t},\r\n\t},\r\n\ttodo: [],\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\nmodule.exports = function ( Liquicode )\r\n{\r\n\r\n\r\n\t//-start-jsdoc---------------------------------------------------------\r\n\t/**\n\t * @public\n\t * @function HasValue\n\t * @returns {boolean}\n\t * True if Value actually contains a value.\n\t * @summary Determine if a variable contains a value or or not.\n\t * @description\n\t * \nTests the provided Value parameter and returns false if it does not represent a value.\nMore specifically, if Value is undefined or null, then false is returned.\nif Value is a zero length string `\"\"` or an empty object `{}`, false is also returned.\nIn all other cases, this function returns true.\n\n\t * @param {*} Value\n\t * The value to test.\n\t*/\n\t//-end-jsdoc-----------------------------------------------------------\r\n\r\n\r\n\tfunction HasValue( Value )\r\n\t{\r\n\t\tif ( Value === undefined ) { return false; }\r\n\t\tif ( Value === null ) { return false; }\r\n\t\tif ( ( typeof Value === 'string' ) && ( Value.length === 0 ) ) { return false; }\r\n\t\tif ( ( typeof Value === 'object' ) && ( Object.keys( Value ).length === 0 ) ) { return false; }\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t//---------------------------------------------------------------------\r\n\t// Return the module exports.\r\n\treturn {\r\n\t\t_Schema: _Schema,\r\n\t\tHasValue: HasValue,\r\n\t};\r\n};\r\n","\"use strict\";\r\n\r\n\r\n//---------------------------------------------------------------------\r\nlet _Schema = {\r\n\tid: '010',\r\n\tmember_of: 'Types',\r\n\tname: 'Coerce',\r\n\ttype: 'function',\r\n\treturns: 'object',\r\n\treturns_description: 'A \\`Coercion\\` object.',\r\n\tsummary: 'Returns a \\`Coercion\\` object which is used to coerce values to different types.',\r\n\tdescription: `\r\nThe returned \\`Coercion\\` object has a single member \\`Coercion.value\\` and a number of coercion functions:\r\n\r\n- \\`ToBoolean( Default = false )\\` :\r\n\tReturns the boolean value of \\`Coercion.value\\`.\r\n\tAnything can be coerced to a boolean.\r\n\tIf value is a string, then 'false' and '0' will return false while 'true' will return true.\r\n\r\n- \\`ToNumber( Default = 0 )\\` :\r\n\tReturns the numeric value of \\`Coercion.value\\`.\r\n\tBooleans, other numbers, and numeric strings can be coerced to a number.\r\n\r\n- \\`ToString( Default = '' )\\` :\r\n\tReturns the string value of \\`Coercion.value\\`.\r\n\tAnything can be coerced to a string.\r\n\tIf value is an object, then it is JSON stringified and returned.\r\n\r\n- \\`ToObject( Default = null )\\` :\r\n\tReturns the object value of \\`Coercion.value\\`.\r\n\tOnly JSON strings and other objects can be coerced to an object.\r\n\tIf value is a JSON string, then it is JSON parsed and returned.\r\n\r\n\\`Coercion.value\\` is set to the Value parameter.\r\n\r\n**Usage**\r\n\r\nThere are two ways to use the \\`Coercion\\` object.\r\n\r\nOne way is to immediately call one of the coercion functions after obtaining the \\`Coercion\\` object:\r\n~~~javascript\r\nlet number_42 = Liquicode.Types.Coerce( '42' ).ToNumber();\r\n~~~\r\n\r\nAnother way is to reuse the \\`Coercion\\` object and alter the \\`Coercion.value\\` property yourself:\r\n~~~javascript\r\nlet coercion = Liquicode.Types.Coerce();\r\ncoercion.value = '42';\r\nlet number_42 = coercion.ToNumber();\r\n~~~\r\n\r\n**Examples**\r\n\r\n~~~javascript\r\n// Coercing to boolean\r\nSchema.Coerce( null ).ToBoolean()           // = false\r\nSchema.Coerce( 0 ).ToBoolean()              // = false\r\nSchema.Coerce( 'true' ).ToBoolean()         // = true\r\n\r\n// Coercing to number\r\nSchema.Coerce( null ).ToNumber()            // = 0\r\nSchema.Coerce( '3.14' ).ToNumber()          // = 3.14\r\nSchema.Coerce( 'foo' ).ToNumber()           // = 0\r\n\r\n// Coercing to string\r\nSchema.Coerce( null ).ToString()            // = ''\r\nSchema.Coerce( '3.14' ).ToString()          // = '3.14'\r\nSchema.Coerce( { foo: 'bar' } ).ToString()  // = '{\"foo\":\"bar\"}'\r\n\r\n// Coercing to object\r\nSchema.Coerce( null ).ToObject()            // = null\r\nSchema.Coerce( 3.14 ).ToObject()            // = null\r\nSchema.Coerce( '{\"foo\":\"bar\"}' ).ToObject() // = { foo: 'bar' }\r\n\r\n// Coercing with a Default\r\nSchema.Coerce( 'Hello' ).ToNumber( -1 )     // = -1\r\nSchema.Coerce( true ).ToObject( {} )        // = {}\r\nSchema.Coerce( 1024 ).ToObject( {} )        // = {}\r\nSchema.Coerce( null ).ToObject( { a: 1 } )  // = { a: 1 }\r\nSchema.Coerce( null ).ToObject( [ 1, 2 ] )  // = [ 1, 2 ]\r\n~~~\r\n`,\r\n\tParameters: {\r\n\t\tValue: {\r\n\t\t\tname: 'Value',\r\n\t\t\ttype: '*',\r\n\t\t\trequired: false,\r\n\t\t\tdescription: 'The value to coerce. This value is set to \\`Coercion.value\\`.',\r\n\t\t},\r\n\t\tLoud: {\r\n\t\t\tname: 'Loud',\r\n\t\t\ttype: 'boolean',\r\n\t\t\trequired: false,\r\n\t\t\tdefault: false,\r\n\t\t\tdescription: 'Throws errors when set to `true`.',\r\n\t\t},\r\n\t},\r\n\ttodo: [],\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\nmodule.exports = function ( Liquicode )\r\n{\r\n\r\n\r\n\t//-start-jsdoc---------------------------------------------------------\r\n\t/**\n\t * @public\n\t * @function Coerce\n\t * @returns {object}\n\t * A `Coercion` object.\n\t * @summary Returns a `Coercion` object which is used to coerce values to different types.\n\t * @description\n\t * \nThe returned `Coercion` object has a single member `Coercion.value` and a number of coercion functions:\n\n- `ToBoolean( Default = false )` :\n\tReturns the boolean value of `Coercion.value`.\n\tAnything can be coerced to a boolean.\n\tIf value is a string, then 'false' and '0' will return false while 'true' will return true.\n\n- `ToNumber( Default = 0 )` :\n\tReturns the numeric value of `Coercion.value`.\n\tBooleans, other numbers, and numeric strings can be coerced to a number.\n\n- `ToString( Default = '' )` :\n\tReturns the string value of `Coercion.value`.\n\tAnything can be coerced to a string.\n\tIf value is an object, then it is JSON stringified and returned.\n\n- `ToObject( Default = null )` :\n\tReturns the object value of `Coercion.value`.\n\tOnly JSON strings and other objects can be coerced to an object.\n\tIf value is a JSON string, then it is JSON parsed and returned.\n\n`Coercion.value` is set to the Value parameter.\n\n**Usage**\n\nThere are two ways to use the `Coercion` object.\n\nOne way is to immediately call one of the coercion functions after obtaining the `Coercion` object:\n~~~javascript\nlet number_42 = Liquicode.Types.Coerce( '42' ).ToNumber();\n~~~\n\nAnother way is to reuse the `Coercion` object and alter the `Coercion.value` property yourself:\n~~~javascript\nlet coercion = Liquicode.Types.Coerce();\ncoercion.value = '42';\nlet number_42 = coercion.ToNumber();\n~~~\n\n**Examples**\n\n~~~javascript\n// Coercing to boolean\nSchema.Coerce( null ).ToBoolean()           // = false\nSchema.Coerce( 0 ).ToBoolean()              // = false\nSchema.Coerce( 'true' ).ToBoolean()         // = true\n\n// Coercing to number\nSchema.Coerce( null ).ToNumber()            // = 0\nSchema.Coerce( '3.14' ).ToNumber()          // = 3.14\nSchema.Coerce( 'foo' ).ToNumber()           // = 0\n\n// Coercing to string\nSchema.Coerce( null ).ToString()            // = ''\nSchema.Coerce( '3.14' ).ToString()          // = '3.14'\nSchema.Coerce( { foo: 'bar' } ).ToString()  // = '{\"foo\":\"bar\"}'\n\n// Coercing to object\nSchema.Coerce( null ).ToObject()            // = null\nSchema.Coerce( 3.14 ).ToObject()            // = null\nSchema.Coerce( '{\"foo\":\"bar\"}' ).ToObject() // = { foo: 'bar' }\n\n// Coercing with a Default\nSchema.Coerce( 'Hello' ).ToNumber( -1 )     // = -1\nSchema.Coerce( true ).ToObject( {} )        // = {}\nSchema.Coerce( 1024 ).ToObject( {} )        // = {}\nSchema.Coerce( null ).ToObject( { a: 1 } )  // = { a: 1 }\nSchema.Coerce( null ).ToObject( [ 1, 2 ] )  // = [ 1, 2 ]\n~~~\n\n\t * @param {*} [Value]\n\t * The value to coerce. This value is set to `Coercion.value`.\n\t * @param {boolean} [Loud]\n\t * Throws errors when set to `true`.\n\t*/\n\t//-end-jsdoc-----------------------------------------------------------\r\n\r\n\r\n\tfunction default_or_error( Loud, Default, ErrorMessage )\r\n\t{\r\n\t\tif ( Loud ) { throw new Error( ErrorMessage ); }\r\n\t\treturn Default;\r\n\t}\r\n\r\n\r\n\tfunction Coerce( Value, Loud = false )\r\n\t{\r\n\t\treturn {\r\n\r\n\t\t\tvalue: Value,\r\n\t\t\tloud: Loud,\r\n\r\n\t\t\t//---------------------------------------------------------------------\r\n\t\t\tToBoolean: function ( Default = false )\r\n\t\t\t{\r\n\t\t\t\tif ( this.value === undefined ) { return Default; }\r\n\t\t\t\tif ( this.value === null ) { return Default; }\r\n\t\t\t\t// Special cases for strings.\r\n\t\t\t\tif ( typeof this.value === 'string' )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( this.value === 'false' ) { return false; }\r\n\t\t\t\t\tif ( this.value === 'true' ) { return true; }\r\n\t\t\t\t\tif ( this.value === '0' ) { return false; }\r\n\t\t\t\t}\r\n\t\t\t\t// Coerce to Boolean.\r\n\t\t\t\tlet coerced = Boolean( this.value );\r\n\t\t\t\treturn coerced;\r\n\t\t\t},\r\n\r\n\t\t\t//---------------------------------------------------------------------\r\n\t\t\tToNumber: function ( Default = 0 )\r\n\t\t\t{\r\n\t\t\t\tif ( this.value === undefined ) { return Default; }\r\n\t\t\t\tif ( this.value === null ) { return Default; }\r\n\t\t\t\t// Coerce to Number.\r\n\t\t\t\tlet coerced = Number( this.value );\r\n\t\t\t\tif ( isNaN( coerced ) ) { return default_or_error( this.loud, Default, 'Unable to coerce value to a number.' ); }\r\n\t\t\t\t// throw new Error( `Value is not numeric.` );\r\n\t\t\t\treturn coerced;\r\n\t\t\t},\r\n\r\n\t\t\t//---------------------------------------------------------------------\r\n\t\t\tToString: function ( Default = '' )\r\n\t\t\t{\r\n\t\t\t\tif ( this.value === undefined ) { return Default; }\r\n\t\t\t\tif ( this.value === null ) { return Default; }\r\n\t\t\t\t// Special case for objects.\r\n\t\t\t\tif ( typeof this.value === 'object' )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn JSON.stringify( this.value );\r\n\t\t\t\t}\r\n\t\t\t\t// Coerce to String.\r\n\t\t\t\tif ( this.value.toString === undefined ) { return default_or_error( this.loud, Default, 'Unable to coerce value to a string.' ); }\r\n\t\t\t\tlet coerced = this.value.toString();\r\n\t\t\t\treturn coerced;\r\n\t\t\t},\r\n\r\n\t\t\t//---------------------------------------------------------------------\r\n\t\t\tToObject: function ( Default = null )\r\n\t\t\t{\r\n\t\t\t\tif ( this.value === undefined ) { return Default; }\r\n\t\t\t\tif ( this.value === null ) { return Default; }\r\n\t\t\t\t// Coerce to Object.\r\n\t\t\t\tswitch ( typeof this.value )\r\n\t\t\t\t{\r\n\t\t\t\t\t// case 'boolean': throw new Error( `Unable to ceorce from boolean to object.` );\r\n\t\t\t\t\tcase 'boolean': return default_or_error( this.loud, Default, 'Unable to coerce from boolean to object.' );\r\n\r\n\t\t\t\t\t// case 'number': throw new Error( `Unable to ceorce from number to object.` );\r\n\t\t\t\t\tcase 'number': return default_or_error( this.loud, Default, 'Unable to coerce from number to object.' );\r\n\r\n\t\t\t\t\tcase 'string':\r\n\t\t\t\t\t\tlet coerced = this.value.trim();\r\n\t\t\t\t\t\tif ( coerced.startsWith( '{' ) || coerced.startsWith( '[' ) )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcoerced = JSON.parse( coerced );\r\n\t\t\t\t\t\t\t\treturn coerced;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch ( error )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn default_or_error( this.loud, Default, 'Unable to coerce from non-json string to object.' );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcase 'object': return this.value;\r\n\r\n\t\t\t\t\t// case 'function': throw new Error( `Unable to ceorce from function to object.` );\r\n\t\t\t\t\tcase 'function': return default_or_error( this.loud, Default, 'Unable to coerce from function to object.' );\r\n\r\n\t\t\t\t\t// case 'symbol': throw new Error( `Unable to ceorce from symbol to object.` );\r\n\t\t\t\t\tcase 'symbol': return default_or_error( this.loud, Default, 'Unable to coerce from symbol to object.' );\r\n\r\n\t\t\t\t\t// default: throw new Error( `Unknown type encountered [${typeof this.value}].` );\r\n\t\t\t\t\tdefault: return default_or_error( this.loud, Default, `Unknown type encountered [${typeof this.value}].` );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t//---------------------------------------------------------------------\r\n\t\t\tToType: function ( TypeName, Default )\r\n\t\t\t{\r\n\t\t\t\tswitch ( TypeName )\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 'boolean': return this.ToBoolean( Default );\r\n\t\t\t\t\tcase 'number': return this.ToNumber( Default );\r\n\t\t\t\t\tcase 'string': return this.ToString( Default );\r\n\t\t\t\t\tcase 'object': return this.ToObject( Default );\r\n\t\t\t\t\tdefault: throw new Error( `Invalid or unknown type name [${TypeName}].` );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t//---------------------------------------------------------------------\r\n\t// Return the module exports.\r\n\treturn {\r\n\t\t_Schema: _Schema,\r\n\t\tCoerce: Coerce,\r\n\t};\r\n};\r\n","\"use strict\";\r\n\r\n\r\n//---------------------------------------------------------------------\r\nlet _Schema = {\r\n\tid: '020',\r\n\tmember_of: 'Types',\r\n\tname: 'Formats',\r\n\tsource_type: 'function',\r\n\treturns: 'object',\r\n\treturns_description: 'An array of \\`SchemaFormat\\` objects.',\r\n\tsummary: 'Returns an array of \\`SchemaFormat\\` objects used to convert values between different formats.',\r\n\tdescription: `\r\nReturns the library's internal array of format objects, \\`Types.Formats\\`.\r\n\r\nEach format has a \\`type\\` and \\`format\\` string, and an \\`IsFormat( Value )\\` function.\r\nThis list of formats is used by the \\`Types.GetFormat()\\` and \\`Types.IsFormat()\\` functions.\r\n\r\nApplications can ammend this array in order to customize type processing or add new formats.\r\nThe structure of each format in the array is:\r\n~~~javascript\r\n{\r\n\ttype: '',    // The Javascript data type. e.g. 'boolean', 'number', 'string', 'object'\r\n\tformat: '',  // A type specific format. e.g. 'integer', 'date'. \r\n\tIsFormat: function ( Value )\r\n\t{\r\n\t\treturn true;  // Return true, if Value is of this format.\r\n\t}\r\n}\r\n~~~\r\n\r\nFor example, here is the format object for \\`\"string:string\"\\`:\r\n~~~javascript\r\n{\r\n\ttype: 'string',\r\n\tformat: 'string',\r\n\tIsFormat: function ( Value )\r\n\t{\r\n\t\tif ( typeof Value !== 'string' ) { return false; }\r\n\t\treturn true;\r\n\t},\r\n},\r\n~~~\r\n\r\nYou have the ability to directly modify the \\`Types.Formats\\` array.\r\n\r\nFor example, suppose you want to define two new formats to detect objects of 'object:person' and 'object:employee'.\r\n~~~javascript\r\nPerson = {\r\n\tfirst_name: '',\r\n\tlast_name: '',\r\n}\r\nEmployee = {\r\n\tfirst_name: '',\r\n\tlast_name: '',\r\n\ttitle: '',\r\n}\r\n~~~\r\n\r\nThe format objects might look something like this:\r\n~~~javascript\r\nobject_person = {\r\n\ttype: 'object',\r\n\tformat: 'person',\r\n\tIsFormat: function( Value )\r\n\t{\r\n\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\tif ( !Value ) { return false; }\r\n\t\tif ( !Value.first_name ) { return false; }\r\n\t\tif ( !Value.last_name ) { return false; }\r\n\t\treturn true;\r\n\t},\r\n},\r\nobject_employee = {\r\n\ttype: 'object',\r\n\tformat: 'employee',\r\n\tIsFormat: function( Value )\r\n\t{\r\n\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\tif ( !Value ) { return false; }\r\n\t\tif ( !Value.first_name ) { return false; }\r\n\t\tif ( !Value.last_name ) { return false; }\r\n\t\tif ( !Value.title ) { return false; }\r\n\t\treturn true;\r\n\t},\r\n},\r\n~~~\r\n\r\nAnd tou can add them to the \\`Types.Formats\\` array:\r\n~~~javascript\r\nlet formats = Liquicode.Types.Formats();\r\nformats.push( object_person );\r\nformats.push( object_employee );\r\n~~~\r\n\r\nThe \\`Types.GetFormat()\\` function reads the formats array in reverse order when matching a value to a format.\r\nThis is done so that more complex types will not get \"short-circuited\" by less complex types.\r\nThe more complex format in this case is \"object:employee\" and should appear after \"object:person\" in the array.\r\n\r\n`,\r\n\tParameters: {},\r\n\ttodo: [],\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\nmodule.exports = function ( Liquicode )\r\n{\r\n\r\n\r\n\t//-start-jsdoc---------------------------------------------------------\r\n\t/**\n\t * @public\n\t * @name Formats\n\t * @returns {object}\n\t * An array of `SchemaFormat` objects.\n\t * @summary Returns an array of `SchemaFormat` objects used to convert values between different formats.\n\t * @description\n\t * \nReturns the library's internal array of format objects, `Types.Formats`.\n\nEach format has a `type` and `format` string, and an `IsFormat( Value )` function.\nThis list of formats is used by the `Types.GetFormat()` and `Types.IsFormat()` functions.\n\nApplications can ammend this array in order to customize type processing or add new formats.\nThe structure of each format in the array is:\n~~~javascript\n{\n\ttype: '',    // The Javascript data type. e.g. 'boolean', 'number', 'string', 'object'\n\tformat: '',  // A type specific format. e.g. 'integer', 'date'. \n\tIsFormat: function ( Value )\n\t{\n\t\treturn true;  // Return true, if Value is of this format.\n\t}\n}\n~~~\n\nFor example, here is the format object for `\"string:string\"`:\n~~~javascript\n{\n\ttype: 'string',\n\tformat: 'string',\n\tIsFormat: function ( Value )\n\t{\n\t\tif ( typeof Value !== 'string' ) { return false; }\n\t\treturn true;\n\t},\n},\n~~~\n\nYou have the ability to directly modify the `Types.Formats` array.\n\nFor example, suppose you want to define two new formats to detect objects of 'object:person' and 'object:employee'.\n~~~javascript\nPerson = {\n\tfirst_name: '',\n\tlast_name: '',\n}\nEmployee = {\n\tfirst_name: '',\n\tlast_name: '',\n\ttitle: '',\n}\n~~~\n\nThe format objects might look something like this:\n~~~javascript\nobject_person = {\n\ttype: 'object',\n\tformat: 'person',\n\tIsFormat: function( Value )\n\t{\n\t\tif ( typeof Value !== 'object' ) { return false; }\n\t\tif ( !Value ) { return false; }\n\t\tif ( !Value.first_name ) { return false; }\n\t\tif ( !Value.last_name ) { return false; }\n\t\treturn true;\n\t},\n},\nobject_employee = {\n\ttype: 'object',\n\tformat: 'employee',\n\tIsFormat: function( Value )\n\t{\n\t\tif ( typeof Value !== 'object' ) { return false; }\n\t\tif ( !Value ) { return false; }\n\t\tif ( !Value.first_name ) { return false; }\n\t\tif ( !Value.last_name ) { return false; }\n\t\tif ( !Value.title ) { return false; }\n\t\treturn true;\n\t},\n},\n~~~\n\nAnd tou can add them to the `Types.Formats` array:\n~~~javascript\nlet formats = Liquicode.Types.Formats();\nformats.push( object_person );\nformats.push( object_employee );\n~~~\n\nThe `Types.GetFormat()` function reads the formats array in reverse order when matching a value to a format.\nThis is done so that more complex types will not get \"short-circuited\" by less complex types.\nThe more complex format in this case is \"object:employee\" and should appear after \"object:person\" in the array.\n\n\n\t*/\n\t//-end-jsdoc-----------------------------------------------------------\r\n\r\n\r\n\tlet _Formats = [\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// boolean : boolean\r\n\t\t{\r\n\t\t\ttype: 'boolean',\r\n\t\t\tformat: 'boolean',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'boolean' ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// number : number\r\n\t\t{\r\n\t\t\ttype: 'number',\r\n\t\t\tformat: 'number',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'number' ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// number : integer\r\n\t\t{\r\n\t\t\ttype: 'number',\r\n\t\t\tformat: 'integer',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'number' ) { return false; }\r\n\t\t\t\tif ( Value !== parseInt( Value.toString() ) ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// string : string\r\n\t\t{\r\n\t\t\ttype: 'string',\r\n\t\t\tformat: 'string',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'string' ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// string : json\r\n\t\t{\r\n\t\t\ttype: 'string',\r\n\t\t\tformat: 'json',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'string' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tValue = Value.trimStart();\r\n\t\t\t\tif ( !Value.startsWith( '{' ) && !Value.startsWith( '[' ) ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// string : datetime\r\n\t\t// 2005-05-01T00:00:00.000Z\r\n\t\t{\r\n\t\t\ttype: 'string',\r\n\t\t\tformat: 'datetime',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'string' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( Value.length !== 24 ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 0, 4 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 4 ] !== '-' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 5, 7 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 7 ] !== '-' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 8, 10 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 10 ] !== 'T' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 11, 13 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 13 ] !== ':' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 14, 16 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 16 ] !== ':' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 17, 19 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 19 ] !== '.' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 20, 23 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 23 ] !== 'Z' ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// string : date\r\n\t\t{\r\n\t\t\ttype: 'string',\r\n\t\t\tformat: 'date',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'string' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( Value.length !== 10 ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 0, 4 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 4 ] !== '-' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 5, 7 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 7 ] !== '-' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 8, 10 ) ) ) ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// string : time\r\n\t\t{\r\n\t\t\ttype: 'string',\r\n\t\t\tformat: 'time',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'string' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( Value.length !== 8 ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 0, 2 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 2 ] !== ':' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 3, 5 ) ) ) ) { return false; }\r\n\t\t\t\tif ( Value[ 5 ] !== ':' ) { return false; }\r\n\t\t\t\tif ( isNaN( Number( Value.substring( 6, 8 ) ) ) ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// object : object\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tformat: 'object',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// object : datetime\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tformat: 'datetime',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( !Value.getTime ) { return false; }\r\n\t\t\t\tif ( isNaN( Value.getTime() ) ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// object : array\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tformat: 'array',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( !Array.isArray( Value ) ) { return false; }\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// object : boolean-array\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tformat: 'boolean-array',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( !Array.isArray( Value ) ) { return false; }\r\n\t\t\t\tif ( !Value.length ) { return false; }\r\n\t\t\t\tfor ( let index = 0; index < Value.length; index++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( typeof Value[ index ] !== 'boolean' ) { return false; }\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// object : number-array\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tformat: 'number-array',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( !Array.isArray( Value ) ) { return false; }\r\n\t\t\t\tif ( !Value.length ) { return false; }\r\n\t\t\t\tfor ( let index = 0; index < Value.length; index++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( typeof Value[ index ] !== 'number' ) { return false; }\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// object : string-array\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tformat: 'string-array',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( !Array.isArray( Value ) ) { return false; }\r\n\t\t\t\tif ( !Value.length ) { return false; }\r\n\t\t\t\tfor ( let index = 0; index < Value.length; index++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( typeof Value[ index ] !== 'string' ) { return false; }\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// object : object-array\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tformat: 'object-array',\r\n\t\t\t// target_type: 'object',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( !Array.isArray( Value ) ) { return false; }\r\n\t\t\t\tif ( !Value.length ) { return false; }\r\n\t\t\t\tfor ( let index = 0; index < Value.length; index++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( typeof Value[ index ] !== 'object' ) { return false; }\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t//---------------------------------------------------------------------\r\n\t\t// object : array-array\r\n\t\t{\r\n\t\t\ttype: 'object',\r\n\t\t\tformat: 'array-array',\r\n\t\t\ttarget_type: 'object',\r\n\t\t\tIsFormat: function ( Value )\r\n\t\t\t{\r\n\t\t\t\tif ( typeof Value !== 'object' ) { return false; }\r\n\t\t\t\tif ( !Value ) { return false; }\r\n\t\t\t\tif ( !Array.isArray( Value ) ) { return false; }\r\n\t\t\t\tif ( !Value.length ) { return false; }\r\n\t\t\t\tfor ( let index = 0; index < Value.length; index++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( typeof Value[ index ] !== 'object' ) { return false; }\r\n\t\t\t\t\tif ( !Array.isArray( Value[ index ] ) ) { return false; }\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t},\r\n\t];\r\n\r\n\r\n\tfunction Formats()\r\n\t{\r\n\t\treturn _Formats;\r\n\t}\r\n\r\n\r\n\t//---------------------------------------------------------------------\r\n\t// Return the module exports.\r\n\treturn {\r\n\t\t_Schema: _Schema,\r\n\t\tFormats: Formats,\r\n\t};\r\n};\r\n","\"use strict\";\r\n\r\n\r\n//---------------------------------------------------------------------\r\nlet _Schema = {\r\n\tid: '021',\r\n\tmember_of: 'Types',\r\n\tname: 'GetFormat',\r\n\ttype: 'function',\r\n\treturns: 'string',\r\n\treturns_description: 'An extended type description.',\r\n\tsummary: 'Determine the type and format of a value.',\r\n\tdescription: `\r\nIterates through \\`Types.Formats\\` in reverse order and calls each \\`Format.IsFormat()\\` function.\r\nWhen one of the formats returns \\`true\\`, then it's type and format are returned separated by \\`:\\`.\r\n\r\n**Examples**\r\n\r\n~~~javascript\r\nLiquicode.Types.GetFormat( '42' )         // = 'number:integer'\r\nLiquicode.Types.GetFormat( 'Hello' )      // = 'string:string'\r\nLiquicode.Types.GetFormat( new Date() )   // = 'object:datetime'\r\nLiquicode.Types.GetFormat( [ 1, 2, 3 ] )  // = 'object:number-array'\r\n~~~\r\n`,\r\n\tParameters: {\r\n\t\tValue: {\r\n\t\t\tname: 'Value',\r\n\t\t\ttype: '*',\r\n\t\t\trequired: true,\r\n\t\t\tdescription: 'The value to get the format for.',\r\n\t\t},\r\n\t},\r\n\ttodo: [],\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\nmodule.exports = function ( Liquicode )\r\n{\r\n\r\n\r\n\t//-start-jsdoc---------------------------------------------------------\r\n\t/**\n\t * @public\n\t * @function GetFormat\n\t * @returns {string}\n\t * An extended type description.\n\t * @summary Determine the type and format of a value.\n\t * @description\n\t * \nIterates through `Types.Formats` in reverse order and calls each `Format.IsFormat()` function.\nWhen one of the formats returns `true`, then it's type and format are returned separated by `:`.\n\n**Examples**\n\n~~~javascript\nLiquicode.Types.GetFormat( '42' )         // = 'number:integer'\nLiquicode.Types.GetFormat( 'Hello' )      // = 'string:string'\nLiquicode.Types.GetFormat( new Date() )   // = 'object:datetime'\nLiquicode.Types.GetFormat( [ 1, 2, 3 ] )  // = 'object:number-array'\n~~~\n\n\t * @param {*} Value\n\t * The value to get the format for.\n\t*/\n\t//-end-jsdoc-----------------------------------------------------------\r\n\r\n\r\n\tfunction GetFormat( Value )\r\n\t{\r\n\t\tlet formats = Liquicode.Types.Formats();\r\n\t\tfor ( let index = ( formats.length - 1 ); index >= 0; index-- )\r\n\t\t{\r\n\t\t\tlet format = formats[ index ];\r\n\t\t\tif ( format.IsFormat( Value ) )\r\n\t\t\t{\r\n\t\t\t\treturn `${format.type}:${format.format}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\t//---------------------------------------------------------------------\r\n\t// Return the module exports.\r\n\treturn {\r\n\t\t_Schema: _Schema,\r\n\t\tGetFormat: GetFormat,\r\n\t};\r\n};\r\n","\"use strict\";\r\n\r\n\r\n//---------------------------------------------------------------------\r\nlet _Schema = {\r\n\tid: '022',\r\n\tmember_of: 'Types',\r\n\tname: 'IsFormat',\r\n\ttype: 'function',\r\n\treturns: 'boolean',\r\n\treturns_description: 'True if the value matches the format.',\r\n\tsummary: 'Determine if a value is of a particular format.',\r\n\tdescription: `\r\nLooks up the specified format in \\`Types.Formats\\` and calls the \\`Format.IsFormat()\\` function.\r\n\r\nThe \\`Format\\` parameter must specify both type and format to be tested for.\r\n\r\n**Examples**\r\n\r\n~~~javascript\r\nLiquicode.Types.IsFormat( 'Hello', 'string:string' )            // = true\r\nLiquicode.Types.IsFormat( 'Hello', 'string:json' )              // = false\r\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:array' )         // = true\r\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:number-array' )  // = true\r\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:string-array' )  // = false\r\n~~~\r\n`,\r\n\tParameters: {\r\n\t\tValue: {\r\n\t\t\tname: 'Value',\r\n\t\t\ttype: '*',\r\n\t\t\trequired: true,\r\n\t\t\tdescription: 'The value to test.',\r\n\t\t},\r\n\t\tFormat: {\r\n\t\t\tname: 'Format',\r\n\t\t\ttype: 'string',\r\n\t\t\trequired: true,\r\n\t\t\tdescription: 'The type and format to test for as: \\`\"type:format\"\\`.',\r\n\t\t\texamples:[\r\n\t\t\t\t'string:string',\r\n\t\t\t\t'string:json',\r\n\t\t\t\t'object:datetime',\r\n\t\t\t],\r\n\t\t},\r\n\t},\r\n\ttodo: [],\r\n};\r\n\r\n\r\n//---------------------------------------------------------------------\r\nmodule.exports = function ( Liquicode )\r\n{\r\n\r\n\r\n\t//-start-jsdoc---------------------------------------------------------\r\n\t/**\n\t * @public\n\t * @function IsFormat\n\t * @returns {boolean}\n\t * True if the value matches the format.\n\t * @summary Determine if a value is of a particular format.\n\t * @description\n\t * \nLooks up the specified format in `Types.Formats` and calls the `Format.IsFormat()` function.\n\nThe `Format` parameter must specify both type and format to be tested for.\n\n**Examples**\n\n~~~javascript\nLiquicode.Types.IsFormat( 'Hello', 'string:string' )            // = true\nLiquicode.Types.IsFormat( 'Hello', 'string:json' )              // = false\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:array' )         // = true\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:number-array' )  // = true\nLiquicode.Types.IsFormat( [ 1, 2, 3 ], 'object:string-array' )  // = false\n~~~\n\n\t * @param {*} Value\n\t * The value to test.\n\t * @param {string} Format\n\t * The type and format to test for as: `\"type:format\"`.\n\t*/\n\t//-end-jsdoc-----------------------------------------------------------\r\n\r\n\r\n\tfunction IsFormat( Value, Format )\r\n\t{\r\n\t\tlet formats = Liquicode.Types.Formats();\r\n\t\tfor ( let index = 0; index < formats.length; index++ )\r\n\t\t{\r\n\t\t\tlet format = formats[ index ];\r\n\t\t\tif ( Format === `${format.type}:${format.format}` )\r\n\t\t\t{\r\n\t\t\t\treturn format.IsFormat( Value );\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error( `Unknown type and format [${Format}]. Should be of the form [type:format].` );\r\n\t}\r\n\r\n\r\n\t//---------------------------------------------------------------------\r\n\t// Return the module exports.\r\n\treturn {\r\n\t\t_Schema: _Schema,\r\n\t\tIsFormat: IsFormat,\r\n\t};\r\n};\r\n","\"use strict\";\r\n\r\nvar Liquicode = {};\r\n\r\nLiquicode.version = 'v0.0.22';\r\nLiquicode.environment = 'node';\r\n\r\nfunction build_library( Group, Filename )\r\n{\r\n\tLiquicode[ Group ] = {};\r\n\tlet members = require( Filename )( Liquicode );\r\n\tlet member_keys = Object.keys( members );\r\n\tfor ( let index = 0; index < member_keys.length; index++ )\r\n\t{\r\n\t\tlet member_key = member_keys[ index ];\r\n\t\tif ( member_key === '_Schema' ) { continue; }\r\n\t\tLiquicode[ member_key ] = members[ member_key ];\r\n\t\tLiquicode[ Group ][ member_key ] = members[ member_key ];\r\n\t}\r\n\tLiquicode.Types = require( './000-Types/000-Types.js' )( Liquicode );\r\n\treturn;\r\n}\r\n\r\nbuild_library( 'Types', './000-Types/000-Types.js' );\r\nbuild_library( 'Object', './100-Object/100-Object.js' );\r\nbuild_library( 'Text', './200-Text/200-Text.js' );\r\nbuild_library( 'Shapes', './300-Shapes/300-Shapes.js' );\r\nbuild_library( 'Parse', './500-Parse/500-Parse.js' );\r\nbuild_library( 'System', './800-System/800-System.js' );\r\nbuild_library( 'Network', './900-Network/900-Network.js' );\r\n\r\n// Liquicode.Types = require( './000-Types/000-Types.js' )( Liquicode );\r\n// Liquicode.Object = require( './100-Object/100-Object.js' )( Liquicode );\r\n// Liquicode.Text = require( './200-Text/200-Text.js' )( Liquicode );\r\n// Liquicode.Shapes = require( './300-Shapes/300-Shapes.js' )( Liquicode );\r\n// Liquicode.Parse = require( './500-Parse/500-Parse.js' )( Liquicode );\r\n// Liquicode.System = require( './800-System/800-System.js' )( Liquicode );\r\n// Liquicode.Network = require( './900-Network/900-Network.js' )( Liquicode );\r\n\r\n// delete Liquicode.Types._Schema;\r\n// delete Liquicode.Object._Schema;\r\n// delete Liquicode.Text._Schema;\r\n// delete Liquicode.Shapes._Schema;\r\n// delete Liquicode.Parse._Schema;\r\n// delete Liquicode.System._Schema;\r\n// delete Liquicode.Network._Schema;\r\n\r\nmodule.exports = Liquicode;\r\n\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src sync recursive\";\nmodule.exports = webpackEmptyContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/liquicode-node.js\");\n",""],"names":[],"sourceRoot":""}